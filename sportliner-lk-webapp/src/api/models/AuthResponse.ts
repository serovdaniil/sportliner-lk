/* tslint:disable */
/* eslint-disable */
/**
 * Sportliner-lk-endpoint-api
 * Sportliner LK Endpoint API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    AuthInfo,
    AuthInfoFromJSON,
    AuthInfoFromJSONTyped,
    AuthInfoToJSON,
    AuthToken,
    AuthTokenFromJSON,
    AuthTokenFromJSONTyped,
    AuthTokenToJSON,
} from './';


/**
 * Authentication response
 * @export
 * @interface AuthResponse
 */
export interface AuthResponse {
    /**
     * 
     * @type {string}
     * @memberof AuthResponse
     */
    status?: AuthResponseStatus;
    /**
     * 
     * @type {AuthToken}
     * @memberof AuthResponse
     */
    token?: AuthToken;
    /**
     * 
     * @type {AuthInfo}
     * @memberof AuthResponse
     */
    info?: AuthInfo;
    /**
     * 
     * @type {number}
     * @memberof AuthResponse
     */
    sessionTimeout: number;
}


/**
 * @export
 */
export const AuthResponseStatus = {
    SUCCESS: 'SUCCESS',
    MUST_CHANGE_PASSWORD: 'MUST_CHANGE_PASSWORD'
} as const;
export type AuthResponseStatus = typeof AuthResponseStatus[keyof typeof AuthResponseStatus];


export function AuthResponseFromJSON(json: any): AuthResponse {
    return AuthResponseFromJSONTyped(json, false);
}

export function AuthResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): AuthResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'status': !exists(json, 'status') ? undefined : json['status'],
        'token': !exists(json, 'token') ? undefined : AuthTokenFromJSON(json['token']),
        'info': !exists(json, 'info') ? undefined : AuthInfoFromJSON(json['info']),
        'sessionTimeout': json['sessionTimeout'],
    };
}

export function AuthResponseToJSON(value?: AuthResponse | null): any {
    return AuthResponseToJSONTyped(value, false);
}

export function AuthResponseToJSONTyped(value?: AuthResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'status': value.status,
        'token': AuthTokenToJSON(value.token),
        'info': AuthInfoToJSON(value.info),
        'sessionTimeout': value.sessionTimeout,
    };
}

