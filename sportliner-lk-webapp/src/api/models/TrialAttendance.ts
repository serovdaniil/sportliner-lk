/* tslint:disable */
/* eslint-disable */
/**
 * Sportliner-lk-endpoint-api
 * Sportliner LK Endpoint API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    BranchOfficeItem,
    BranchOfficeItemFromJSON,
    BranchOfficeItemFromJSONTyped,
    BranchOfficeItemToJSON,
    TrialAttendanceStatus,
    TrialAttendanceStatusFromJSON,
    TrialAttendanceStatusFromJSONTyped,
    TrialAttendanceStatusToJSON,
} from './';


/**
 * Trial attendance
 * @export
 * @interface TrialAttendance
 */
export interface TrialAttendance {
    /**
     * 
     * @type {string}
     * @memberof TrialAttendance
     */
    readonly id: string;
    /**
     * 
     * @type {string}
     * @memberof TrialAttendance
     */
    telegramUsername?: string;
    /**
     * 
     * @type {BranchOfficeItem}
     * @memberof TrialAttendance
     */
    branchOffice: BranchOfficeItem;
    /**
     * 
     * @type {string}
     * @memberof TrialAttendance
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof TrialAttendance
     */
    phone: string;
    /**
     * 
     * @type {string}
     * @memberof TrialAttendance
     */
    diagnosis: string;
    /**
     * A date without a time-zone in the ISO-8601 calendar system.

     * @type {string}
     * @memberof TrialAttendance
     */
    date: string;
    /**
     * 
     * @type {TrialAttendanceStatus}
     * @memberof TrialAttendance
     */
    status: TrialAttendanceStatus;
}

export function TrialAttendanceFromJSON(json: any): TrialAttendance {
    return TrialAttendanceFromJSONTyped(json, false);
}

export function TrialAttendanceFromJSONTyped(json: any, ignoreDiscriminator: boolean): TrialAttendance {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'telegramUsername': !exists(json, 'telegramUsername') ? undefined : json['telegramUsername'],
        'branchOffice': BranchOfficeItemFromJSON(json['branchOffice']),
        'name': json['name'],
        'phone': json['phone'],
        'diagnosis': json['diagnosis'],
        'date': json['date'],
        'status': TrialAttendanceStatusFromJSON(json['status']),
    };
}

export function TrialAttendanceToJSON(value?: TrialAttendance | null): any {
    return TrialAttendanceToJSONTyped(value, false);
}

export function TrialAttendanceToJSONTyped(value?: TrialAttendance | null, ignoreDiscriminator: boolean = false): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'telegramUsername': value.telegramUsername,
        'branchOffice': BranchOfficeItemToJSON(value.branchOffice),
        'name': value.name,
        'phone': value.phone,
        'diagnosis': value.diagnosis,
        'date': value.date,
        'status': TrialAttendanceStatusToJSON(value.status),
    };
}

