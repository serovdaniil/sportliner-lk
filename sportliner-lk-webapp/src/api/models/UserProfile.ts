/* tslint:disable */
/* eslint-disable */
/**
 * Sportliner-lk-endpoint-api
 * Sportliner LK Endpoint API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ChildInfo,
    ChildInfoFromJSON,
    ChildInfoFromJSONTyped,
    ChildInfoToJSON,
} from './';


/**
 * User account
 * @export
 * @interface UserProfile
 */
export interface UserProfile {
    /**
     * 
     * @type {string}
     * @memberof UserProfile
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof UserProfile
     */
    username: string;
    /**
     * 
     * @type {string}
     * @memberof UserProfile
     */
    email: string;
    /**
     * 
     * @type {string}
     * @memberof UserProfile
     */
    phone: string;
    /**
     * 
     * @type {string}
     * @memberof UserProfile
     */
    firstName: string;
    /**
     * 
     * @type {string}
     * @memberof UserProfile
     */
    patronymic: string;
    /**
     * 
     * @type {string}
     * @memberof UserProfile
     */
    lastName: string;
    /**
     * Children who will attend the classes
     * @type {Array<ChildInfo>}
     * @memberof UserProfile
     */
    children?: Array<ChildInfo>;
}

export function UserProfileFromJSON(json: any): UserProfile {
    return UserProfileFromJSONTyped(json, false);
}

export function UserProfileFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserProfile {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'username': json['username'],
        'email': json['email'],
        'phone': json['phone'],
        'firstName': json['firstName'],
        'patronymic': json['patronymic'],
        'lastName': json['lastName'],
        'children': !exists(json, 'children') ? undefined : ((json['children'] as Array<any>).map(ChildInfoFromJSON)),
    };
}

export function UserProfileToJSON(value?: UserProfile | null): any {
    return UserProfileToJSONTyped(value, false);
}

export function UserProfileToJSONTyped(value?: UserProfile | null, ignoreDiscriminator: boolean = false): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'username': value.username,
        'email': value.email,
        'phone': value.phone,
        'firstName': value.firstName,
        'patronymic': value.patronymic,
        'lastName': value.lastName,
        'children': value.children === undefined ? undefined : ((value.children as Array<any>).map(ChildInfoToJSON)),
    };
}

