/*
 * EPOS public API
 * **Public API сервиса E-POS**  For mode details refer to: * [ Website ](https://www.e-pos.by) * [API Docs](https://api-epos.hgrosh.by/public/swagger/index.html)
 *
 * The version of the OpenAPI document: v1
 * Contact: support-api@epos.by
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package by.sportliner.lk.integration.epos.hgrosh.internal.api;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.LocalDateTime;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;

/**
 * Дополнительная структура об оплате
 */
@JsonPropertyOrder({
  TransactionBankData.JSON_PROPERTY_BANK_CODE,
  TransactionBankData.JSON_PROPERTY_AUTH_TYPE,
  TransactionBankData.JSON_PROPERTY_MEM_ORDER_DATE,
  TransactionBankData.JSON_PROPERTY_MEM_ORDER_NUM,
  TransactionBankData.JSON_PROPERTY_PAY_TYPE,
  TransactionBankData.JSON_PROPERTY_PAY_TYPE_NAME
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class TransactionBankData {
  public static final String JSON_PROPERTY_BANK_CODE = "bankCode";
  private JsonNullable<Integer> bankCode = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_AUTH_TYPE = "authType";
  private JsonNullable<String> authType = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MEM_ORDER_DATE = "memOrderDate";
  private LocalDateTime memOrderDate;

  public static final String JSON_PROPERTY_MEM_ORDER_NUM = "memOrderNum";
  private JsonNullable<Long> memOrderNum = JsonNullable.<Long>undefined();

  public static final String JSON_PROPERTY_PAY_TYPE = "payType";
  private JsonNullable<Integer> payType = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_PAY_TYPE_NAME = "payTypeName";
  private JsonNullable<String> payTypeName = JsonNullable.<String>undefined();

  public TransactionBankData() {
  }

  @JsonCreator
  public TransactionBankData(
    @JsonProperty(JSON_PROPERTY_PAY_TYPE_NAME) String payTypeName
  ) {
    this();
    this.payTypeName = payTypeName == null ? JsonNullable.<String>undefined() : JsonNullable.of(payTypeName);
  }

  public TransactionBankData bankCode(Integer bankCode) {
    this.bankCode = JsonNullable.<Integer>of(bankCode);
    
    return this;
  }

   /**
   * Код банка, осуществившего платеж
   * @return bankCode
  **/
  @jakarta.annotation.Nullable

  @JsonIgnore

  public Integer getBankCode() {
        return bankCode.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_BANK_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getBankCode_JsonNullable() {
    return bankCode;
  }
  
  @JsonProperty(JSON_PROPERTY_BANK_CODE)
  public void setBankCode_JsonNullable(JsonNullable<Integer> bankCode) {
    this.bankCode = bankCode;
  }

  public void setBankCode(Integer bankCode) {
    this.bankCode = JsonNullable.<Integer>of(bankCode);
  }


  public TransactionBankData authType(String authType) {
    this.authType = JsonNullable.<String>of(authType);
    
    return this;
  }

   /**
   * Тип авторизации плательщика
   * @return authType
  **/
  @jakarta.annotation.Nullable

  @JsonIgnore

  public String getAuthType() {
        return authType.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_AUTH_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getAuthType_JsonNullable() {
    return authType;
  }
  
  @JsonProperty(JSON_PROPERTY_AUTH_TYPE)
  public void setAuthType_JsonNullable(JsonNullable<String> authType) {
    this.authType = authType;
  }

  public void setAuthType(String authType) {
    this.authType = JsonNullable.<String>of(authType);
  }


  public TransactionBankData memOrderDate(LocalDateTime memOrderDate) {
    
    this.memOrderDate = memOrderDate;
    return this;
  }

   /**
   * Get memOrderDate
   * @return memOrderDate
  **/
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_MEM_ORDER_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LocalDateTime getMemOrderDate() {
    return memOrderDate;
  }


  @JsonProperty(JSON_PROPERTY_MEM_ORDER_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMemOrderDate(LocalDateTime memOrderDate) {
    this.memOrderDate = memOrderDate;
  }


  public TransactionBankData memOrderNum(Long memOrderNum) {
    this.memOrderNum = JsonNullable.<Long>of(memOrderNum);
    
    return this;
  }

   /**
   * Номер мемориального ордера
   * @return memOrderNum
  **/
  @jakarta.annotation.Nullable

  @JsonIgnore

  public Long getMemOrderNum() {
        return memOrderNum.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MEM_ORDER_NUM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Long> getMemOrderNum_JsonNullable() {
    return memOrderNum;
  }
  
  @JsonProperty(JSON_PROPERTY_MEM_ORDER_NUM)
  public void setMemOrderNum_JsonNullable(JsonNullable<Long> memOrderNum) {
    this.memOrderNum = memOrderNum;
  }

  public void setMemOrderNum(Long memOrderNum) {
    this.memOrderNum = JsonNullable.<Long>of(memOrderNum);
  }


  public TransactionBankData payType(Integer payType) {
    this.payType = JsonNullable.<Integer>of(payType);
    
    return this;
  }

   /**
   * Тип устройства
   * @return payType
  **/
  @jakarta.annotation.Nullable

  @JsonIgnore

  public Integer getPayType() {
        return payType.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PAY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getPayType_JsonNullable() {
    return payType;
  }
  
  @JsonProperty(JSON_PROPERTY_PAY_TYPE)
  public void setPayType_JsonNullable(JsonNullable<Integer> payType) {
    this.payType = payType;
  }

  public void setPayType(Integer payType) {
    this.payType = JsonNullable.<Integer>of(payType);
  }


   /**
   * Расшифрованный тип устройства
   * @return payTypeName
  **/
  @jakarta.annotation.Nullable

  @JsonIgnore

  public String getPayTypeName() {
    
    if (payTypeName == null) {
      payTypeName = JsonNullable.<String>undefined();
    }
    return payTypeName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PAY_TYPE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPayTypeName_JsonNullable() {
    return payTypeName;
  }
  
  @JsonProperty(JSON_PROPERTY_PAY_TYPE_NAME)
  private void setPayTypeName_JsonNullable(JsonNullable<String> payTypeName) {
    this.payTypeName = payTypeName;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TransactionBankData transactionBankData = (TransactionBankData) o;
    return equalsNullable(this.bankCode, transactionBankData.bankCode) &&
        equalsNullable(this.authType, transactionBankData.authType) &&
        Objects.equals(this.memOrderDate, transactionBankData.memOrderDate) &&
        equalsNullable(this.memOrderNum, transactionBankData.memOrderNum) &&
        equalsNullable(this.payType, transactionBankData.payType) &&
        equalsNullable(this.payTypeName, transactionBankData.payTypeName);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(bankCode), hashCodeNullable(authType), memOrderDate, hashCodeNullable(memOrderNum), hashCodeNullable(payType), hashCodeNullable(payTypeName));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TransactionBankData {\n");
    sb.append("    bankCode: ").append(toIndentedString(bankCode)).append("\n");
    sb.append("    authType: ").append(toIndentedString(authType)).append("\n");
    sb.append("    memOrderDate: ").append(toIndentedString(memOrderDate)).append("\n");
    sb.append("    memOrderNum: ").append(toIndentedString(memOrderNum)).append("\n");
    sb.append("    payType: ").append(toIndentedString(payType)).append("\n");
    sb.append("    payTypeName: ").append(toIndentedString(payTypeName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

