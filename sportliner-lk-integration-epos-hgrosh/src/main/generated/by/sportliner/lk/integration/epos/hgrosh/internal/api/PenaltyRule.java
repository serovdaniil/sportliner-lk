/*
 * EPOS public API
 * **Public API сервиса E-POS**  For mode details refer to: * [ Website ](https://www.e-pos.by) * [API Docs](https://api-epos.hgrosh.by/public/swagger/index.html)
 *
 * The version of the OpenAPI document: v1
 * Contact: support-api@epos.by
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package by.sportliner.lk.integration.epos.hgrosh.internal.api;

import java.util.Objects;
import java.util.Arrays;
import by.sportliner.lk.integration.epos.hgrosh.internal.api.PenaltyTypeEnum;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;

/**
 * Правила начисления пени.
 */
@JsonPropertyOrder({
  PenaltyRule.JSON_PROPERTY_PERCENT,
  PenaltyRule.JSON_PROPERTY_TYPE,
  PenaltyRule.JSON_PROPERTY_MIN_AMOUNT,
  PenaltyRule.JSON_PROPERTY_MAX_AMOUNT
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class PenaltyRule {
  public static final String JSON_PROPERTY_PERCENT = "percent";
  private Double percent;

  public static final String JSON_PROPERTY_TYPE = "type";
  private PenaltyTypeEnum type;

  public static final String JSON_PROPERTY_MIN_AMOUNT = "minAmount";
  private Double minAmount;

  public static final String JSON_PROPERTY_MAX_AMOUNT = "maxAmount";
  private Double maxAmount;

  public PenaltyRule() {
  }

  public PenaltyRule percent(Double percent) {
    
    this.percent = percent;
    return this;
  }

   /**
   * Процент начисления.
   * @return percent
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_PERCENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getPercent() {
    return percent;
  }


  @JsonProperty(JSON_PROPERTY_PERCENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPercent(Double percent) {
    this.percent = percent;
  }


  public PenaltyRule type(PenaltyTypeEnum type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PenaltyTypeEnum getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(PenaltyTypeEnum type) {
    this.type = type;
  }


  public PenaltyRule minAmount(Double minAmount) {
    
    this.minAmount = minAmount;
    return this;
  }

   /**
   * Минимальный размер пени. Устанавливается сразу при первом начислении пени, если расчетное значение меньше этого параметра.
   * @return minAmount
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_MIN_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getMinAmount() {
    return minAmount;
  }


  @JsonProperty(JSON_PROPERTY_MIN_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMinAmount(Double minAmount) {
    this.minAmount = minAmount;
  }


  public PenaltyRule maxAmount(Double maxAmount) {
    
    this.maxAmount = maxAmount;
    return this;
  }

   /**
   * Максимальный размер пени. Если рассчитанное значение превышает данный параметр, то используется это значение.
   * @return maxAmount
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_MAX_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getMaxAmount() {
    return maxAmount;
  }


  @JsonProperty(JSON_PROPERTY_MAX_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMaxAmount(Double maxAmount) {
    this.maxAmount = maxAmount;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PenaltyRule penaltyRule = (PenaltyRule) o;
    return Objects.equals(this.percent, penaltyRule.percent) &&
        Objects.equals(this.type, penaltyRule.type) &&
        Objects.equals(this.minAmount, penaltyRule.minAmount) &&
        Objects.equals(this.maxAmount, penaltyRule.maxAmount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(percent, type, minAmount, maxAmount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PenaltyRule {\n");
    sb.append("    percent: ").append(toIndentedString(percent)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    minAmount: ").append(toIndentedString(minAmount)).append("\n");
    sb.append("    maxAmount: ").append(toIndentedString(maxAmount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

