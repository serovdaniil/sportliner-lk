/*
 * EPOS public API
 * **Public API сервиса E-POS**  For mode details refer to: * [ Website ](https://www.e-pos.by) * [API Docs](https://api-epos.hgrosh.by/public/swagger/index.html)
 *
 * The version of the OpenAPI document: v1
 * Contact: support-api@epos.by
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package by.sportliner.lk.integration.epos.hgrosh.internal.api;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

/**
 * Возможные состояния транзакции  0 - Начало оплаты  10 - Оплата сверена  20 - Оплата произведена  30 - Отмена оплаты  -10 - Сторно оплаты  -20 - Отказ регистрации
 */
public enum TransactionStateEnum {
  
  NUMBER_0(0),
  
  NUMBER_10(10),
  
  NUMBER_20(20),
  
  NUMBER_30(30),
  
  NUMBER_MINUS_20(-20),
  
  NUMBER_MINUS_10(-10);

  private Integer value;

  TransactionStateEnum(Integer value) {
    this.value = value;
  }

  @JsonValue
  public Integer getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  @JsonCreator
  public static TransactionStateEnum fromValue(Integer value) {
    for (TransactionStateEnum b : TransactionStateEnum.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }
}

