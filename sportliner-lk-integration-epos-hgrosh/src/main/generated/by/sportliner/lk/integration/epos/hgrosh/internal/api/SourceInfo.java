/*
 * EPOS public API
 * **Public API сервиса E-POS**  For mode details refer to: * [ Website ](https://www.e-pos.by) * [API Docs](https://api-epos.hgrosh.by/public/swagger/index.html)
 *
 * The version of the OpenAPI document: v1
 * Contact: support-api@epos.by
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package by.sportliner.lk.integration.epos.hgrosh.internal.api;

import java.util.Objects;
import java.util.Arrays;
import by.sportliner.lk.integration.epos.hgrosh.internal.api.GuidStringProperty;
import by.sportliner.lk.integration.epos.hgrosh.internal.api.Int64StringProperty;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;

/**
 * Информация об источнике.
 */
@JsonPropertyOrder({
  SourceInfo.JSON_PROPERTY_NETWORK_SOURCE,
  SourceInfo.JSON_PROPERTY_USER,
  SourceInfo.JSON_PROPERTY_SERVICE,
  SourceInfo.JSON_PROPERTY_SERVICE_PROVIDER
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class SourceInfo {
  public static final String JSON_PROPERTY_NETWORK_SOURCE = "networkSource";
  private JsonNullable<String> networkSource = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_USER = "user";
  private GuidStringProperty user;

  public static final String JSON_PROPERTY_SERVICE = "service";
  private Int64StringProperty service;

  public static final String JSON_PROPERTY_SERVICE_PROVIDER = "serviceProvider";
  private Int64StringProperty serviceProvider;

  public SourceInfo() {
  }

  public SourceInfo networkSource(String networkSource) {
    this.networkSource = JsonNullable.<String>of(networkSource);
    
    return this;
  }

   /**
   * IP адрес.
   * @return networkSource
  **/
  @jakarta.annotation.Nullable

  @JsonIgnore

  public String getNetworkSource() {
        return networkSource.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NETWORK_SOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNetworkSource_JsonNullable() {
    return networkSource;
  }
  
  @JsonProperty(JSON_PROPERTY_NETWORK_SOURCE)
  public void setNetworkSource_JsonNullable(JsonNullable<String> networkSource) {
    this.networkSource = networkSource;
  }

  public void setNetworkSource(String networkSource) {
    this.networkSource = JsonNullable.<String>of(networkSource);
  }


  public SourceInfo user(GuidStringProperty user) {
    
    this.user = user;
    return this;
  }

   /**
   * Get user
   * @return user
  **/
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_USER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public GuidStringProperty getUser() {
    return user;
  }


  @JsonProperty(JSON_PROPERTY_USER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUser(GuidStringProperty user) {
    this.user = user;
  }


  public SourceInfo service(Int64StringProperty service) {
    
    this.service = service;
    return this;
  }

   /**
   * Get service
   * @return service
  **/
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_SERVICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Int64StringProperty getService() {
    return service;
  }


  @JsonProperty(JSON_PROPERTY_SERVICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setService(Int64StringProperty service) {
    this.service = service;
  }


  public SourceInfo serviceProvider(Int64StringProperty serviceProvider) {
    
    this.serviceProvider = serviceProvider;
    return this;
  }

   /**
   * Get serviceProvider
   * @return serviceProvider
  **/
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_SERVICE_PROVIDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Int64StringProperty getServiceProvider() {
    return serviceProvider;
  }


  @JsonProperty(JSON_PROPERTY_SERVICE_PROVIDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setServiceProvider(Int64StringProperty serviceProvider) {
    this.serviceProvider = serviceProvider;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SourceInfo sourceInfo = (SourceInfo) o;
    return equalsNullable(this.networkSource, sourceInfo.networkSource) &&
        Objects.equals(this.user, sourceInfo.user) &&
        Objects.equals(this.service, sourceInfo.service) &&
        Objects.equals(this.serviceProvider, sourceInfo.serviceProvider);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(networkSource), user, service, serviceProvider);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SourceInfo {\n");
    sb.append("    networkSource: ").append(toIndentedString(networkSource)).append("\n");
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("    service: ").append(toIndentedString(service)).append("\n");
    sb.append("    serviceProvider: ").append(toIndentedString(serviceProvider)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

