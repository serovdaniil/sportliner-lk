/*
 * EPOS public API
 * **Public API сервиса E-POS**  For mode details refer to: * [ Website ](https://www.e-pos.by) * [API Docs](https://api-epos.hgrosh.by/public/swagger/index.html)
 *
 * The version of the OpenAPI document: v1
 * Contact: support-api@epos.by
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package by.sportliner.lk.integration.epos.hgrosh.internal.api;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;

/**
 * Формирование информации об Ртт в qr-коде.
 */
@JsonPropertyOrder({
  RetailOutletMerchantInfo.JSON_PROPERTY_STORE_NAME,
  RetailOutletMerchantInfo.JSON_PROPERTY_STORE_LOCALITY_NAME,
  RetailOutletMerchantInfo.JSON_PROPERTY_LOCALITY_CODE,
  RetailOutletMerchantInfo.JSON_PROPERTY_STORE_CITY,
  RetailOutletMerchantInfo.JSON_PROPERTY_STORE_LOCALITY_CITY,
  RetailOutletMerchantInfo.JSON_PROPERTY_TRERMINAL_LABEL
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class RetailOutletMerchantInfo {
  public static final String JSON_PROPERTY_STORE_NAME = "storeName";
  private JsonNullable<String> storeName = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_STORE_LOCALITY_NAME = "storeLocalityName";
  private JsonNullable<String> storeLocalityName = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCALITY_CODE = "localityCode";
  private JsonNullable<String> localityCode = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_STORE_CITY = "storeCity";
  private JsonNullable<String> storeCity = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_STORE_LOCALITY_CITY = "storeLocalityCity";
  private JsonNullable<String> storeLocalityCity = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_TRERMINAL_LABEL = "trerminalLabel";
  private JsonNullable<String> trerminalLabel = JsonNullable.<String>undefined();

  public RetailOutletMerchantInfo() {
  }

  public RetailOutletMerchantInfo storeName(String storeName) {
    this.storeName = JsonNullable.<String>of(storeName);
    
    return this;
  }

   /**
   * Наименование магазина латиницей.
   * @return storeName
  **/
  @jakarta.annotation.Nullable

  @JsonIgnore

  public String getStoreName() {
        return storeName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STORE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getStoreName_JsonNullable() {
    return storeName;
  }
  
  @JsonProperty(JSON_PROPERTY_STORE_NAME)
  public void setStoreName_JsonNullable(JsonNullable<String> storeName) {
    this.storeName = storeName;
  }

  public void setStoreName(String storeName) {
    this.storeName = JsonNullable.<String>of(storeName);
  }


  public RetailOutletMerchantInfo storeLocalityName(String storeLocalityName) {
    this.storeLocalityName = JsonNullable.<String>of(storeLocalityName);
    
    return this;
  }

   /**
   * Наименование РТТ в локале
   * @return storeLocalityName
  **/
  @jakarta.annotation.Nullable

  @JsonIgnore

  public String getStoreLocalityName() {
        return storeLocalityName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STORE_LOCALITY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getStoreLocalityName_JsonNullable() {
    return storeLocalityName;
  }
  
  @JsonProperty(JSON_PROPERTY_STORE_LOCALITY_NAME)
  public void setStoreLocalityName_JsonNullable(JsonNullable<String> storeLocalityName) {
    this.storeLocalityName = storeLocalityName;
  }

  public void setStoreLocalityName(String storeLocalityName) {
    this.storeLocalityName = JsonNullable.<String>of(storeLocalityName);
  }


  public RetailOutletMerchantInfo localityCode(String localityCode) {
    this.localityCode = JsonNullable.<String>of(localityCode);
    
    return this;
  }

   /**
   * Наименование локали
   * @return localityCode
  **/
  @jakarta.annotation.Nullable

  @JsonIgnore

  public String getLocalityCode() {
        return localityCode.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCALITY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalityCode_JsonNullable() {
    return localityCode;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCALITY_CODE)
  public void setLocalityCode_JsonNullable(JsonNullable<String> localityCode) {
    this.localityCode = localityCode;
  }

  public void setLocalityCode(String localityCode) {
    this.localityCode = JsonNullable.<String>of(localityCode);
  }


  public RetailOutletMerchantInfo storeCity(String storeCity) {
    this.storeCity = JsonNullable.<String>of(storeCity);
    
    return this;
  }

   /**
   * Наименование населенного пункта РТТ латиницей.
   * @return storeCity
  **/
  @jakarta.annotation.Nullable

  @JsonIgnore

  public String getStoreCity() {
        return storeCity.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STORE_CITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getStoreCity_JsonNullable() {
    return storeCity;
  }
  
  @JsonProperty(JSON_PROPERTY_STORE_CITY)
  public void setStoreCity_JsonNullable(JsonNullable<String> storeCity) {
    this.storeCity = storeCity;
  }

  public void setStoreCity(String storeCity) {
    this.storeCity = JsonNullable.<String>of(storeCity);
  }


  public RetailOutletMerchantInfo storeLocalityCity(String storeLocalityCity) {
    this.storeLocalityCity = JsonNullable.<String>of(storeLocalityCity);
    
    return this;
  }

   /**
   * Наименование населенного пункта РТТ в локале.
   * @return storeLocalityCity
  **/
  @jakarta.annotation.Nullable

  @JsonIgnore

  public String getStoreLocalityCity() {
        return storeLocalityCity.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STORE_LOCALITY_CITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getStoreLocalityCity_JsonNullable() {
    return storeLocalityCity;
  }
  
  @JsonProperty(JSON_PROPERTY_STORE_LOCALITY_CITY)
  public void setStoreLocalityCity_JsonNullable(JsonNullable<String> storeLocalityCity) {
    this.storeLocalityCity = storeLocalityCity;
  }

  public void setStoreLocalityCity(String storeLocalityCity) {
    this.storeLocalityCity = JsonNullable.<String>of(storeLocalityCity);
  }


  public RetailOutletMerchantInfo trerminalLabel(String trerminalLabel) {
    this.trerminalLabel = JsonNullable.<String>of(trerminalLabel);
    
    return this;
  }

   /**
   * Идентификатор терминала
   * @return trerminalLabel
  **/
  @jakarta.annotation.Nullable

  @JsonIgnore

  public String getTrerminalLabel() {
        return trerminalLabel.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TRERMINAL_LABEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getTrerminalLabel_JsonNullable() {
    return trerminalLabel;
  }
  
  @JsonProperty(JSON_PROPERTY_TRERMINAL_LABEL)
  public void setTrerminalLabel_JsonNullable(JsonNullable<String> trerminalLabel) {
    this.trerminalLabel = trerminalLabel;
  }

  public void setTrerminalLabel(String trerminalLabel) {
    this.trerminalLabel = JsonNullable.<String>of(trerminalLabel);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RetailOutletMerchantInfo retailOutletMerchantInfo = (RetailOutletMerchantInfo) o;
    return equalsNullable(this.storeName, retailOutletMerchantInfo.storeName) &&
        equalsNullable(this.storeLocalityName, retailOutletMerchantInfo.storeLocalityName) &&
        equalsNullable(this.localityCode, retailOutletMerchantInfo.localityCode) &&
        equalsNullable(this.storeCity, retailOutletMerchantInfo.storeCity) &&
        equalsNullable(this.storeLocalityCity, retailOutletMerchantInfo.storeLocalityCity) &&
        equalsNullable(this.trerminalLabel, retailOutletMerchantInfo.trerminalLabel);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(storeName), hashCodeNullable(storeLocalityName), hashCodeNullable(localityCode), hashCodeNullable(storeCity), hashCodeNullable(storeLocalityCity), hashCodeNullable(trerminalLabel));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RetailOutletMerchantInfo {\n");
    sb.append("    storeName: ").append(toIndentedString(storeName)).append("\n");
    sb.append("    storeLocalityName: ").append(toIndentedString(storeLocalityName)).append("\n");
    sb.append("    localityCode: ").append(toIndentedString(localityCode)).append("\n");
    sb.append("    storeCity: ").append(toIndentedString(storeCity)).append("\n");
    sb.append("    storeLocalityCity: ").append(toIndentedString(storeLocalityCity)).append("\n");
    sb.append("    trerminalLabel: ").append(toIndentedString(trerminalLabel)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

