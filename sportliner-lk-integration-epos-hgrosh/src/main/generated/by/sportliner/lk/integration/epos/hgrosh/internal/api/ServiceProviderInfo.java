/*
 * EPOS public API
 * **Public API сервиса E-POS**  For mode details refer to: * [ Website ](https://www.e-pos.by) * [API Docs](https://api-epos.hgrosh.by/public/swagger/index.html)
 *
 * The version of the OpenAPI document: v1
 * Contact: support-api@epos.by
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package by.sportliner.lk.integration.epos.hgrosh.internal.api;

import java.util.Objects;
import java.util.Arrays;
import by.sportliner.lk.integration.epos.hgrosh.internal.api.CashBox;
import by.sportliner.lk.integration.epos.hgrosh.internal.api.ConfigTypeEnum;
import by.sportliner.lk.integration.epos.hgrosh.internal.api.RetailOutlet;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;

/**
 * Информация о производителе услуг.
 */
@JsonPropertyOrder({
  ServiceProviderInfo.JSON_PROPERTY_SERVICE_PROVIDER_ID,
  ServiceProviderInfo.JSON_PROPERTY_SERVICE_PROVIDER_NAME,
  ServiceProviderInfo.JSON_PROPERTY_SERVICE_ID,
  ServiceProviderInfo.JSON_PROPERTY_SERVICE_NAME,
  ServiceProviderInfo.JSON_PROPERTY_NOTIFICATION_CHANNEL,
  ServiceProviderInfo.JSON_PROPERTY_RETAIL_OUTLET,
  ServiceProviderInfo.JSON_PROPERTY_CASH_BOX
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ServiceProviderInfo {
  public static final String JSON_PROPERTY_SERVICE_PROVIDER_ID = "serviceProviderId";
  private Long serviceProviderId;

  public static final String JSON_PROPERTY_SERVICE_PROVIDER_NAME = "serviceProviderName";
  private JsonNullable<String> serviceProviderName = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SERVICE_ID = "serviceId";
  private Long serviceId;

  public static final String JSON_PROPERTY_SERVICE_NAME = "serviceName";
  private JsonNullable<String> serviceName = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NOTIFICATION_CHANNEL = "notificationChannel";
  private JsonNullable<List<ConfigTypeEnum>> notificationChannel = JsonNullable.<List<ConfigTypeEnum>>undefined();

  public static final String JSON_PROPERTY_RETAIL_OUTLET = "retailOutlet";
  private RetailOutlet retailOutlet;

  public static final String JSON_PROPERTY_CASH_BOX = "cashBox";
  private CashBox cashBox;

  public ServiceProviderInfo() {
  }

  public ServiceProviderInfo serviceProviderId(Long serviceProviderId) {
    
    this.serviceProviderId = serviceProviderId;
    return this;
  }

   /**
   * Уникальный идентификатор производителя услуг.
   * @return serviceProviderId
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_SERVICE_PROVIDER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getServiceProviderId() {
    return serviceProviderId;
  }


  @JsonProperty(JSON_PROPERTY_SERVICE_PROVIDER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setServiceProviderId(Long serviceProviderId) {
    this.serviceProviderId = serviceProviderId;
  }


  public ServiceProviderInfo serviceProviderName(String serviceProviderName) {
    this.serviceProviderName = JsonNullable.<String>of(serviceProviderName);
    
    return this;
  }

   /**
   * Наименование ПУ
   * @return serviceProviderName
  **/
  @jakarta.annotation.Nullable

  @JsonIgnore

  public String getServiceProviderName() {
        return serviceProviderName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SERVICE_PROVIDER_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getServiceProviderName_JsonNullable() {
    return serviceProviderName;
  }
  
  @JsonProperty(JSON_PROPERTY_SERVICE_PROVIDER_NAME)
  public void setServiceProviderName_JsonNullable(JsonNullable<String> serviceProviderName) {
    this.serviceProviderName = serviceProviderName;
  }

  public void setServiceProviderName(String serviceProviderName) {
    this.serviceProviderName = JsonNullable.<String>of(serviceProviderName);
  }


  public ServiceProviderInfo serviceId(Long serviceId) {
    
    this.serviceId = serviceId;
    return this;
  }

   /**
   * Идентификатор услуги.
   * @return serviceId
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_SERVICE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getServiceId() {
    return serviceId;
  }


  @JsonProperty(JSON_PROPERTY_SERVICE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setServiceId(Long serviceId) {
    this.serviceId = serviceId;
  }


  public ServiceProviderInfo serviceName(String serviceName) {
    this.serviceName = JsonNullable.<String>of(serviceName);
    
    return this;
  }

   /**
   * Наименование услуги
   * @return serviceName
  **/
  @jakarta.annotation.Nullable

  @JsonIgnore

  public String getServiceName() {
        return serviceName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SERVICE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getServiceName_JsonNullable() {
    return serviceName;
  }
  
  @JsonProperty(JSON_PROPERTY_SERVICE_NAME)
  public void setServiceName_JsonNullable(JsonNullable<String> serviceName) {
    this.serviceName = serviceName;
  }

  public void setServiceName(String serviceName) {
    this.serviceName = JsonNullable.<String>of(serviceName);
  }


  public ServiceProviderInfo notificationChannel(List<ConfigTypeEnum> notificationChannel) {
    this.notificationChannel = JsonNullable.<List<ConfigTypeEnum>>of(notificationChannel);
    
    return this;
  }

  public ServiceProviderInfo addNotificationChannelItem(ConfigTypeEnum notificationChannelItem) {
    if (this.notificationChannel == null || !this.notificationChannel.isPresent()) {
      this.notificationChannel = JsonNullable.<List<ConfigTypeEnum>>of(new ArrayList<>());
    }
    try {
      this.notificationChannel.get().add(notificationChannelItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Способ уведомления производителя услуг.
   * @return notificationChannel
  **/
  @jakarta.annotation.Nullable
  @Valid

  @JsonIgnore

  public List<ConfigTypeEnum> getNotificationChannel() {
        return notificationChannel.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NOTIFICATION_CHANNEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<ConfigTypeEnum>> getNotificationChannel_JsonNullable() {
    return notificationChannel;
  }
  
  @JsonProperty(JSON_PROPERTY_NOTIFICATION_CHANNEL)
  public void setNotificationChannel_JsonNullable(JsonNullable<List<ConfigTypeEnum>> notificationChannel) {
    this.notificationChannel = notificationChannel;
  }

  public void setNotificationChannel(List<ConfigTypeEnum> notificationChannel) {
    this.notificationChannel = JsonNullable.<List<ConfigTypeEnum>>of(notificationChannel);
  }


  public ServiceProviderInfo retailOutlet(RetailOutlet retailOutlet) {
    
    this.retailOutlet = retailOutlet;
    return this;
  }

   /**
   * Get retailOutlet
   * @return retailOutlet
  **/
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_RETAIL_OUTLET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RetailOutlet getRetailOutlet() {
    return retailOutlet;
  }


  @JsonProperty(JSON_PROPERTY_RETAIL_OUTLET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRetailOutlet(RetailOutlet retailOutlet) {
    this.retailOutlet = retailOutlet;
  }


  public ServiceProviderInfo cashBox(CashBox cashBox) {
    
    this.cashBox = cashBox;
    return this;
  }

   /**
   * Get cashBox
   * @return cashBox
  **/
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_CASH_BOX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CashBox getCashBox() {
    return cashBox;
  }


  @JsonProperty(JSON_PROPERTY_CASH_BOX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCashBox(CashBox cashBox) {
    this.cashBox = cashBox;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ServiceProviderInfo serviceProviderInfo = (ServiceProviderInfo) o;
    return Objects.equals(this.serviceProviderId, serviceProviderInfo.serviceProviderId) &&
        equalsNullable(this.serviceProviderName, serviceProviderInfo.serviceProviderName) &&
        Objects.equals(this.serviceId, serviceProviderInfo.serviceId) &&
        equalsNullable(this.serviceName, serviceProviderInfo.serviceName) &&
        equalsNullable(this.notificationChannel, serviceProviderInfo.notificationChannel) &&
        Objects.equals(this.retailOutlet, serviceProviderInfo.retailOutlet) &&
        Objects.equals(this.cashBox, serviceProviderInfo.cashBox);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(serviceProviderId, hashCodeNullable(serviceProviderName), serviceId, hashCodeNullable(serviceName), hashCodeNullable(notificationChannel), retailOutlet, cashBox);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ServiceProviderInfo {\n");
    sb.append("    serviceProviderId: ").append(toIndentedString(serviceProviderId)).append("\n");
    sb.append("    serviceProviderName: ").append(toIndentedString(serviceProviderName)).append("\n");
    sb.append("    serviceId: ").append(toIndentedString(serviceId)).append("\n");
    sb.append("    serviceName: ").append(toIndentedString(serviceName)).append("\n");
    sb.append("    notificationChannel: ").append(toIndentedString(notificationChannel)).append("\n");
    sb.append("    retailOutlet: ").append(toIndentedString(retailOutlet)).append("\n");
    sb.append("    cashBox: ").append(toIndentedString(cashBox)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

