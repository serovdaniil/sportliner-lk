/*
 * EPOS public API
 * **Public API сервиса E-POS**  For mode details refer to: * [ Website ](https://www.e-pos.by) * [API Docs](https://api-epos.hgrosh.by/public/swagger/index.html)
 *
 * The version of the OpenAPI document: v1
 * Contact: support-api@epos.by
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package by.sportliner.lk.integration.epos.hgrosh.internal.api;

import java.util.Objects;
import java.util.Arrays;
import by.sportliner.lk.integration.epos.hgrosh.internal.api.BillingInfo;
import by.sportliner.lk.integration.epos.hgrosh.internal.api.InvoiceStateEnum;
import by.sportliner.lk.integration.epos.hgrosh.internal.api.PaymentDueTerms;
import by.sportliner.lk.integration.epos.hgrosh.internal.api.PaymentRules;
import by.sportliner.lk.integration.epos.hgrosh.internal.api.ServiceProviderInfo;
import by.sportliner.lk.integration.epos.hgrosh.internal.api.ShippingInfo;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.UUID;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;

/**
 * Класс для отображения элемента списка счетов
 */
@JsonPropertyOrder({
  InvoiceListItem.JSON_PROPERTY_ID,
  InvoiceListItem.JSON_PROPERTY_ADD_DATE_U_T_C,
  InvoiceListItem.JSON_PROPERTY_PAY_DATE_U_T_C,
  InvoiceListItem.JSON_PROPERTY_PARENT_ID,
  InvoiceListItem.JSON_PROPERTY_NUMBER,
  InvoiceListItem.JSON_PROPERTY_CURRENCY,
  InvoiceListItem.JSON_PROPERTY_MERCHANT_INFO,
  InvoiceListItem.JSON_PROPERTY_BILLING_INFO,
  InvoiceListItem.JSON_PROPERTY_SHIPPING_INFO,
  InvoiceListItem.JSON_PROPERTY_DATE_IN_AIR_U_T_C,
  InvoiceListItem.JSON_PROPERTY_PAYMENT_DUE_TERMS,
  InvoiceListItem.JSON_PROPERTY_PAYMENT_RULES,
  InvoiceListItem.JSON_PROPERTY_TERMS,
  InvoiceListItem.JSON_PROPERTY_NOTE,
  InvoiceListItem.JSON_PROPERTY_STATE,
  InvoiceListItem.JSON_PROPERTY_AMOUNT,
  InvoiceListItem.JSON_PROPERTY_TOTAL_AMOUNT,
  InvoiceListItem.JSON_PROPERTY_AMOUNT_PAID,
  InvoiceListItem.JSON_PROPERTY_MEM_ORDER_NUM,
  InvoiceListItem.JSON_PROPERTY_MEM_ORDER_DATE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class InvoiceListItem {
  public static final String JSON_PROPERTY_ID = "id";
  private UUID id;

  public static final String JSON_PROPERTY_ADD_DATE_U_T_C = "addDateUTC";
  private java.time.LocalDateTime addDateUTC;

  public static final String JSON_PROPERTY_PAY_DATE_U_T_C = "payDateUTC";
  private java.time.LocalDateTime payDateUTC;

  public static final String JSON_PROPERTY_PARENT_ID = "parentId";
  private JsonNullable<UUID> parentId = JsonNullable.<UUID>undefined();

  public static final String JSON_PROPERTY_NUMBER = "number";
  private JsonNullable<String> number = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CURRENCY = "currency";
  private JsonNullable<String> currency = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MERCHANT_INFO = "merchantInfo";
  private ServiceProviderInfo merchantInfo;

  public static final String JSON_PROPERTY_BILLING_INFO = "billingInfo";
  private BillingInfo billingInfo;

  public static final String JSON_PROPERTY_SHIPPING_INFO = "shippingInfo";
  private ShippingInfo shippingInfo;

  public static final String JSON_PROPERTY_DATE_IN_AIR_U_T_C = "dateInAirUTC";
  private java.time.LocalDateTime dateInAirUTC;

  public static final String JSON_PROPERTY_PAYMENT_DUE_TERMS = "paymentDueTerms";
  private PaymentDueTerms paymentDueTerms;

  public static final String JSON_PROPERTY_PAYMENT_RULES = "paymentRules";
  private PaymentRules paymentRules;

  public static final String JSON_PROPERTY_TERMS = "terms";
  private JsonNullable<String> terms = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NOTE = "note";
  private JsonNullable<String> note = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_STATE = "state";
  private InvoiceStateEnum state;

  public static final String JSON_PROPERTY_AMOUNT = "amount";
  private Double amount;

  public static final String JSON_PROPERTY_TOTAL_AMOUNT = "totalAmount";
  private Double totalAmount;

  public static final String JSON_PROPERTY_AMOUNT_PAID = "amountPaid";
  private Double amountPaid;

  public static final String JSON_PROPERTY_MEM_ORDER_NUM = "memOrderNum";
  private JsonNullable<String> memOrderNum = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MEM_ORDER_DATE = "memOrderDate";
  private java.time.LocalDateTime memOrderDate;

  public InvoiceListItem() {
  }

  public InvoiceListItem id(UUID id) {
    
    this.id = id;
    return this;
  }

   /**
   * Внутренний идентификатор счета.
   * @return id
  **/
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(UUID id) {
    this.id = id;
  }


  public InvoiceListItem addDateUTC(java.time.LocalDateTime addDateUTC) {
    
    this.addDateUTC = addDateUTC;
    return this;
  }

   /**
   * Get addDateUTC
   * @return addDateUTC
  **/
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_ADD_DATE_U_T_C)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getAddDateUTC() {
    return addDateUTC;
  }


  @JsonProperty(JSON_PROPERTY_ADD_DATE_U_T_C)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAddDateUTC(java.time.LocalDateTime addDateUTC) {
    this.addDateUTC = addDateUTC;
  }


  public InvoiceListItem payDateUTC(java.time.LocalDateTime payDateUTC) {
    
    this.payDateUTC = payDateUTC;
    return this;
  }

   /**
   * Get payDateUTC
   * @return payDateUTC
  **/
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_PAY_DATE_U_T_C)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getPayDateUTC() {
    return payDateUTC;
  }


  @JsonProperty(JSON_PROPERTY_PAY_DATE_U_T_C)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPayDateUTC(java.time.LocalDateTime payDateUTC) {
    this.payDateUTC = payDateUTC;
  }


  public InvoiceListItem parentId(UUID parentId) {
    this.parentId = JsonNullable.<UUID>of(parentId);
    
    return this;
  }

   /**
   * Идентификатор родительской записи.
   * @return parentId
  **/
  @jakarta.annotation.Nullable
  @Valid

  @JsonIgnore

  public UUID getParentId() {
        return parentId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PARENT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getParentId_JsonNullable() {
    return parentId;
  }
  
  @JsonProperty(JSON_PROPERTY_PARENT_ID)
  public void setParentId_JsonNullable(JsonNullable<UUID> parentId) {
    this.parentId = parentId;
  }

  public void setParentId(UUID parentId) {
    this.parentId = JsonNullable.<UUID>of(parentId);
  }


  public InvoiceListItem number(String number) {
    this.number = JsonNullable.<String>of(number);
    
    return this;
  }

   /**
   * Номер счета.
   * @return number
  **/
  @jakarta.annotation.Nullable

  @JsonIgnore

  public String getNumber() {
        return number.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNumber_JsonNullable() {
    return number;
  }
  
  @JsonProperty(JSON_PROPERTY_NUMBER)
  public void setNumber_JsonNullable(JsonNullable<String> number) {
    this.number = number;
  }

  public void setNumber(String number) {
    this.number = JsonNullable.<String>of(number);
  }


  public InvoiceListItem currency(String currency) {
    this.currency = JsonNullable.<String>of(currency);
    
    return this;
  }

   /**
   * Валюта инвойса. ISO 4217 трех символьный код валюты.
   * @return currency
  **/
  @jakarta.annotation.Nullable

  @JsonIgnore

  public String getCurrency() {
        return currency.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCurrency_JsonNullable() {
    return currency;
  }
  
  @JsonProperty(JSON_PROPERTY_CURRENCY)
  public void setCurrency_JsonNullable(JsonNullable<String> currency) {
    this.currency = currency;
  }

  public void setCurrency(String currency) {
    this.currency = JsonNullable.<String>of(currency);
  }


  public InvoiceListItem merchantInfo(ServiceProviderInfo merchantInfo) {
    
    this.merchantInfo = merchantInfo;
    return this;
  }

   /**
   * Get merchantInfo
   * @return merchantInfo
  **/
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_MERCHANT_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ServiceProviderInfo getMerchantInfo() {
    return merchantInfo;
  }


  @JsonProperty(JSON_PROPERTY_MERCHANT_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMerchantInfo(ServiceProviderInfo merchantInfo) {
    this.merchantInfo = merchantInfo;
  }


  public InvoiceListItem billingInfo(BillingInfo billingInfo) {
    
    this.billingInfo = billingInfo;
    return this;
  }

   /**
   * Get billingInfo
   * @return billingInfo
  **/
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_BILLING_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BillingInfo getBillingInfo() {
    return billingInfo;
  }


  @JsonProperty(JSON_PROPERTY_BILLING_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBillingInfo(BillingInfo billingInfo) {
    this.billingInfo = billingInfo;
  }


  public InvoiceListItem shippingInfo(ShippingInfo shippingInfo) {
    
    this.shippingInfo = shippingInfo;
    return this;
  }

   /**
   * Get shippingInfo
   * @return shippingInfo
  **/
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_SHIPPING_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ShippingInfo getShippingInfo() {
    return shippingInfo;
  }


  @JsonProperty(JSON_PROPERTY_SHIPPING_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setShippingInfo(ShippingInfo shippingInfo) {
    this.shippingInfo = shippingInfo;
  }


  public InvoiceListItem dateInAirUTC(java.time.LocalDateTime dateInAirUTC) {
    
    this.dateInAirUTC = dateInAirUTC;
    return this;
  }

   /**
   * Get dateInAirUTC
   * @return dateInAirUTC
  **/
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_DATE_IN_AIR_U_T_C)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getDateInAirUTC() {
    return dateInAirUTC;
  }


  @JsonProperty(JSON_PROPERTY_DATE_IN_AIR_U_T_C)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDateInAirUTC(java.time.LocalDateTime dateInAirUTC) {
    this.dateInAirUTC = dateInAirUTC;
  }


  public InvoiceListItem paymentDueTerms(PaymentDueTerms paymentDueTerms) {
    
    this.paymentDueTerms = paymentDueTerms;
    return this;
  }

   /**
   * Get paymentDueTerms
   * @return paymentDueTerms
  **/
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_PAYMENT_DUE_TERMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PaymentDueTerms getPaymentDueTerms() {
    return paymentDueTerms;
  }


  @JsonProperty(JSON_PROPERTY_PAYMENT_DUE_TERMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPaymentDueTerms(PaymentDueTerms paymentDueTerms) {
    this.paymentDueTerms = paymentDueTerms;
  }


  public InvoiceListItem paymentRules(PaymentRules paymentRules) {
    
    this.paymentRules = paymentRules;
    return this;
  }

   /**
   * Get paymentRules
   * @return paymentRules
  **/
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_PAYMENT_RULES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PaymentRules getPaymentRules() {
    return paymentRules;
  }


  @JsonProperty(JSON_PROPERTY_PAYMENT_RULES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPaymentRules(PaymentRules paymentRules) {
    this.paymentRules = paymentRules;
  }


  public InvoiceListItem terms(String terms) {
    this.terms = JsonNullable.<String>of(terms);
    
    return this;
  }

   /**
   * Общие условия счета.
   * @return terms
  **/
  @jakarta.annotation.Nullable

  @JsonIgnore

  public String getTerms() {
        return terms.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TERMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getTerms_JsonNullable() {
    return terms;
  }
  
  @JsonProperty(JSON_PROPERTY_TERMS)
  public void setTerms_JsonNullable(JsonNullable<String> terms) {
    this.terms = terms;
  }

  public void setTerms(String terms) {
    this.terms = JsonNullable.<String>of(terms);
  }


  public InvoiceListItem note(String note) {
    this.note = JsonNullable.<String>of(note);
    
    return this;
  }

   /**
   * Примечание к счету.
   * @return note
  **/
  @jakarta.annotation.Nullable

  @JsonIgnore

  public String getNote() {
        return note.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NOTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNote_JsonNullable() {
    return note;
  }
  
  @JsonProperty(JSON_PROPERTY_NOTE)
  public void setNote_JsonNullable(JsonNullable<String> note) {
    this.note = note;
  }

  public void setNote(String note) {
    this.note = JsonNullable.<String>of(note);
  }


  public InvoiceListItem state(InvoiceStateEnum state) {
    
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InvoiceStateEnum getState() {
    return state;
  }


  @JsonProperty(JSON_PROPERTY_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setState(InvoiceStateEnum state) {
    this.state = state;
  }


  public InvoiceListItem amount(Double amount) {
    
    this.amount = amount;
    return this;
  }

   /**
   * Сумма по счету в валюте счета
   * @return amount
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getAmount() {
    return amount;
  }


  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAmount(Double amount) {
    this.amount = amount;
  }


  public InvoiceListItem totalAmount(Double totalAmount) {
    
    this.totalAmount = totalAmount;
    return this;
  }

   /**
   * Сумма к оплате по инвойсу на момент получения инвойса
   * @return totalAmount
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_TOTAL_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getTotalAmount() {
    return totalAmount;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalAmount(Double totalAmount) {
    this.totalAmount = totalAmount;
  }


  public InvoiceListItem amountPaid(Double amountPaid) {
    
    this.amountPaid = amountPaid;
    return this;
  }

   /**
   * Сумма оплаты по счету в валюте счета
   * @return amountPaid
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_AMOUNT_PAID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getAmountPaid() {
    return amountPaid;
  }


  @JsonProperty(JSON_PROPERTY_AMOUNT_PAID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAmountPaid(Double amountPaid) {
    this.amountPaid = amountPaid;
  }


  public InvoiceListItem memOrderNum(String memOrderNum) {
    this.memOrderNum = JsonNullable.<String>of(memOrderNum);
    
    return this;
  }

   /**
   * Номер мем-ордера
   * @return memOrderNum
  **/
  @jakarta.annotation.Nullable

  @JsonIgnore

  public String getMemOrderNum() {
        return memOrderNum.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MEM_ORDER_NUM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMemOrderNum_JsonNullable() {
    return memOrderNum;
  }
  
  @JsonProperty(JSON_PROPERTY_MEM_ORDER_NUM)
  public void setMemOrderNum_JsonNullable(JsonNullable<String> memOrderNum) {
    this.memOrderNum = memOrderNum;
  }

  public void setMemOrderNum(String memOrderNum) {
    this.memOrderNum = JsonNullable.<String>of(memOrderNum);
  }


  public InvoiceListItem memOrderDate(java.time.LocalDateTime memOrderDate) {
    
    this.memOrderDate = memOrderDate;
    return this;
  }

   /**
   * Get memOrderDate
   * @return memOrderDate
  **/
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_MEM_ORDER_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getMemOrderDate() {
    return memOrderDate;
  }


  @JsonProperty(JSON_PROPERTY_MEM_ORDER_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMemOrderDate(java.time.LocalDateTime memOrderDate) {
    this.memOrderDate = memOrderDate;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InvoiceListItem invoiceListItem = (InvoiceListItem) o;
    return Objects.equals(this.id, invoiceListItem.id) &&
        Objects.equals(this.addDateUTC, invoiceListItem.addDateUTC) &&
        Objects.equals(this.payDateUTC, invoiceListItem.payDateUTC) &&
        equalsNullable(this.parentId, invoiceListItem.parentId) &&
        equalsNullable(this.number, invoiceListItem.number) &&
        equalsNullable(this.currency, invoiceListItem.currency) &&
        Objects.equals(this.merchantInfo, invoiceListItem.merchantInfo) &&
        Objects.equals(this.billingInfo, invoiceListItem.billingInfo) &&
        Objects.equals(this.shippingInfo, invoiceListItem.shippingInfo) &&
        Objects.equals(this.dateInAirUTC, invoiceListItem.dateInAirUTC) &&
        Objects.equals(this.paymentDueTerms, invoiceListItem.paymentDueTerms) &&
        Objects.equals(this.paymentRules, invoiceListItem.paymentRules) &&
        equalsNullable(this.terms, invoiceListItem.terms) &&
        equalsNullable(this.note, invoiceListItem.note) &&
        Objects.equals(this.state, invoiceListItem.state) &&
        Objects.equals(this.amount, invoiceListItem.amount) &&
        Objects.equals(this.totalAmount, invoiceListItem.totalAmount) &&
        Objects.equals(this.amountPaid, invoiceListItem.amountPaid) &&
        equalsNullable(this.memOrderNum, invoiceListItem.memOrderNum) &&
        Objects.equals(this.memOrderDate, invoiceListItem.memOrderDate);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, addDateUTC, payDateUTC, hashCodeNullable(parentId), hashCodeNullable(number), hashCodeNullable(currency), merchantInfo, billingInfo, shippingInfo, dateInAirUTC, paymentDueTerms, paymentRules, hashCodeNullable(terms), hashCodeNullable(note), state, amount, totalAmount, amountPaid, hashCodeNullable(memOrderNum), memOrderDate);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InvoiceListItem {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    addDateUTC: ").append(toIndentedString(addDateUTC)).append("\n");
    sb.append("    payDateUTC: ").append(toIndentedString(payDateUTC)).append("\n");
    sb.append("    parentId: ").append(toIndentedString(parentId)).append("\n");
    sb.append("    number: ").append(toIndentedString(number)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    merchantInfo: ").append(toIndentedString(merchantInfo)).append("\n");
    sb.append("    billingInfo: ").append(toIndentedString(billingInfo)).append("\n");
    sb.append("    shippingInfo: ").append(toIndentedString(shippingInfo)).append("\n");
    sb.append("    dateInAirUTC: ").append(toIndentedString(dateInAirUTC)).append("\n");
    sb.append("    paymentDueTerms: ").append(toIndentedString(paymentDueTerms)).append("\n");
    sb.append("    paymentRules: ").append(toIndentedString(paymentRules)).append("\n");
    sb.append("    terms: ").append(toIndentedString(terms)).append("\n");
    sb.append("    note: ").append(toIndentedString(note)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    totalAmount: ").append(toIndentedString(totalAmount)).append("\n");
    sb.append("    amountPaid: ").append(toIndentedString(amountPaid)).append("\n");
    sb.append("    memOrderNum: ").append(toIndentedString(memOrderNum)).append("\n");
    sb.append("    memOrderDate: ").append(toIndentedString(memOrderDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

