/*
 * EPOS public API
 * **Public API сервиса E-POS**  For mode details refer to: * [ Website ](https://www.e-pos.by) * [API Docs](https://api-epos.hgrosh.by/public/swagger/index.html)
 *
 * The version of the OpenAPI document: v1
 * Contact: support-api@epos.by
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package by.sportliner.lk.integration.epos.hgrosh.internal.api;

import java.util.Objects;
import java.util.Arrays;
import by.sportliner.lk.integration.epos.hgrosh.internal.api.Currency;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;

/**
 * Информация по платежу инвойса
 */
@JsonPropertyOrder({
  PaymentData.JSON_PROPERTY_PAY_DATE,
  PaymentData.JSON_PROPERTY_VERIFY_DATE,
  PaymentData.JSON_PROPERTY_MEM_ORDER_NUM,
  PaymentData.JSON_PROPERTY_MEM_ORDER_DATE,
  PaymentData.JSON_PROPERTY_BANK_CODE,
  PaymentData.JSON_PROPERTY_TRAN_ERIP_ID,
  PaymentData.JSON_PROPERTY_AUTH_TYPE,
  PaymentData.JSON_PROPERTY_CURRENCY,
  PaymentData.JSON_PROPERTY_PAY_AMOUNT,
  PaymentData.JSON_PROPERTY_CURRENCY_PAY_AMOUNT,
  PaymentData.JSON_PROPERTY_CURRENCY_RATE,
  PaymentData.JSON_PROPERTY_TRANSFER_AMOUNT,
  PaymentData.JSON_PROPERTY_COMISSIONS,
  PaymentData.JSON_PROPERTY_CLIENT_F_I_O,
  PaymentData.JSON_PROPERTY_CLIENT_ADDRESS,
  PaymentData.JSON_PROPERTY_CLIENT_EMAIL,
  PaymentData.JSON_PROPERTY_CLIENT_PHONE,
  PaymentData.JSON_PROPERTY_COMISSIONS_AMOUNT,
  PaymentData.JSON_PROPERTY_PENALTY
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class PaymentData {
  public static final String JSON_PROPERTY_PAY_DATE = "payDate";
  private java.time.LocalDateTime payDate;

  public static final String JSON_PROPERTY_VERIFY_DATE = "verifyDate";
  private java.time.LocalDateTime verifyDate;

  public static final String JSON_PROPERTY_MEM_ORDER_NUM = "memOrderNum";
  private JsonNullable<Long> memOrderNum = JsonNullable.<Long>undefined();

  public static final String JSON_PROPERTY_MEM_ORDER_DATE = "memOrderDate";
  private java.time.LocalDateTime memOrderDate;

  public static final String JSON_PROPERTY_BANK_CODE = "bankCode";
  private JsonNullable<String> bankCode = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_TRAN_ERIP_ID = "tranEripId";
  private Long tranEripId;

  public static final String JSON_PROPERTY_AUTH_TYPE = "authType";
  private JsonNullable<String> authType = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CURRENCY = "currency";
  private Currency currency;

  public static final String JSON_PROPERTY_PAY_AMOUNT = "payAmount";
  private Double payAmount;

  public static final String JSON_PROPERTY_CURRENCY_PAY_AMOUNT = "currencyPayAmount";
  private Double currencyPayAmount;

  public static final String JSON_PROPERTY_CURRENCY_RATE = "currencyRate";
  private Double currencyRate;

  public static final String JSON_PROPERTY_TRANSFER_AMOUNT = "transferAmount";
  private JsonNullable<Double> transferAmount = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_COMISSIONS = "comissions";
  private JsonNullable<Map<String, Double>> comissions = JsonNullable.<Map<String, Double>>undefined();

  public static final String JSON_PROPERTY_CLIENT_F_I_O = "clientFIO";
  private JsonNullable<String> clientFIO = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CLIENT_ADDRESS = "clientAddress";
  private JsonNullable<String> clientAddress = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CLIENT_EMAIL = "clientEmail";
  private JsonNullable<String> clientEmail = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CLIENT_PHONE = "clientPhone";
  private JsonNullable<String> clientPhone = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_COMISSIONS_AMOUNT = "comissionsAmount";
  private Double comissionsAmount;

  public static final String JSON_PROPERTY_PENALTY = "penalty";
  private Double penalty;

  public PaymentData() {
  }

  @JsonCreator
  public PaymentData(
    @JsonProperty(JSON_PROPERTY_COMISSIONS_AMOUNT) Double comissionsAmount
  ) {
    this();
    this.comissionsAmount = comissionsAmount;
  }

  public PaymentData payDate(java.time.LocalDateTime payDate) {
    
    this.payDate = payDate;
    return this;
  }

   /**
   * Get payDate
   * @return payDate
  **/
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_PAY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getPayDate() {
    return payDate;
  }


  @JsonProperty(JSON_PROPERTY_PAY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPayDate(java.time.LocalDateTime payDate) {
    this.payDate = payDate;
  }


  public PaymentData verifyDate(java.time.LocalDateTime verifyDate) {
    
    this.verifyDate = verifyDate;
    return this;
  }

   /**
   * Get verifyDate
   * @return verifyDate
  **/
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_VERIFY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getVerifyDate() {
    return verifyDate;
  }


  @JsonProperty(JSON_PROPERTY_VERIFY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVerifyDate(java.time.LocalDateTime verifyDate) {
    this.verifyDate = verifyDate;
  }


  public PaymentData memOrderNum(Long memOrderNum) {
    this.memOrderNum = JsonNullable.<Long>of(memOrderNum);
    
    return this;
  }

   /**
   * Номер мем-ордера
   * @return memOrderNum
  **/
  @jakarta.annotation.Nullable

  @JsonIgnore

  public Long getMemOrderNum() {
        return memOrderNum.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MEM_ORDER_NUM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Long> getMemOrderNum_JsonNullable() {
    return memOrderNum;
  }
  
  @JsonProperty(JSON_PROPERTY_MEM_ORDER_NUM)
  public void setMemOrderNum_JsonNullable(JsonNullable<Long> memOrderNum) {
    this.memOrderNum = memOrderNum;
  }

  public void setMemOrderNum(Long memOrderNum) {
    this.memOrderNum = JsonNullable.<Long>of(memOrderNum);
  }


  public PaymentData memOrderDate(java.time.LocalDateTime memOrderDate) {
    
    this.memOrderDate = memOrderDate;
    return this;
  }

   /**
   * Get memOrderDate
   * @return memOrderDate
  **/
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_MEM_ORDER_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getMemOrderDate() {
    return memOrderDate;
  }


  @JsonProperty(JSON_PROPERTY_MEM_ORDER_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMemOrderDate(java.time.LocalDateTime memOrderDate) {
    this.memOrderDate = memOrderDate;
  }


  public PaymentData bankCode(String bankCode) {
    this.bankCode = JsonNullable.<String>of(bankCode);
    
    return this;
  }

   /**
   * Код банка
   * @return bankCode
  **/
  @jakarta.annotation.Nullable

  @JsonIgnore

  public String getBankCode() {
        return bankCode.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_BANK_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getBankCode_JsonNullable() {
    return bankCode;
  }
  
  @JsonProperty(JSON_PROPERTY_BANK_CODE)
  public void setBankCode_JsonNullable(JsonNullable<String> bankCode) {
    this.bankCode = bankCode;
  }

  public void setBankCode(String bankCode) {
    this.bankCode = JsonNullable.<String>of(bankCode);
  }


  public PaymentData tranEripId(Long tranEripId) {
    
    this.tranEripId = tranEripId;
    return this;
  }

   /**
   * Код операции в ЕРИП
   * @return tranEripId
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_TRAN_ERIP_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getTranEripId() {
    return tranEripId;
  }


  @JsonProperty(JSON_PROPERTY_TRAN_ERIP_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTranEripId(Long tranEripId) {
    this.tranEripId = tranEripId;
  }


  public PaymentData authType(String authType) {
    this.authType = JsonNullable.<String>of(authType);
    
    return this;
  }

   /**
   * Тип авторизации
   * @return authType
  **/
  @jakarta.annotation.Nullable

  @JsonIgnore

  public String getAuthType() {
        return authType.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_AUTH_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getAuthType_JsonNullable() {
    return authType;
  }
  
  @JsonProperty(JSON_PROPERTY_AUTH_TYPE)
  public void setAuthType_JsonNullable(JsonNullable<String> authType) {
    this.authType = authType;
  }

  public void setAuthType(String authType) {
    this.authType = JsonNullable.<String>of(authType);
  }


  public PaymentData currency(Currency currency) {
    
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Currency getCurrency() {
    return currency;
  }


  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCurrency(Currency currency) {
    this.currency = currency;
  }


  public PaymentData payAmount(Double payAmount) {
    
    this.payAmount = payAmount;
    return this;
  }

   /**
   * Оплаченная сумма покупателем в национальной валюте
   * @return payAmount
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_PAY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getPayAmount() {
    return payAmount;
  }


  @JsonProperty(JSON_PROPERTY_PAY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPayAmount(Double payAmount) {
    this.payAmount = payAmount;
  }


  public PaymentData currencyPayAmount(Double currencyPayAmount) {
    
    this.currencyPayAmount = currencyPayAmount;
    return this;
  }

   /**
   * Оплаченная сумма в валюте счета
   * @return currencyPayAmount
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_CURRENCY_PAY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getCurrencyPayAmount() {
    return currencyPayAmount;
  }


  @JsonProperty(JSON_PROPERTY_CURRENCY_PAY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCurrencyPayAmount(Double currencyPayAmount) {
    this.currencyPayAmount = currencyPayAmount;
  }


  public PaymentData currencyRate(Double currencyRate) {
    
    this.currencyRate = currencyRate;
    return this;
  }

   /**
   * Курс конверсии
   * @return currencyRate
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_CURRENCY_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getCurrencyRate() {
    return currencyRate;
  }


  @JsonProperty(JSON_PROPERTY_CURRENCY_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCurrencyRate(Double currencyRate) {
    this.currencyRate = currencyRate;
  }


  public PaymentData transferAmount(Double transferAmount) {
    this.transferAmount = JsonNullable.<Double>of(transferAmount);
    
    return this;
  }

   /**
   * Сумма, которая придет на счет ПУ
   * @return transferAmount
  **/
  @jakarta.annotation.Nullable

  @JsonIgnore

  public Double getTransferAmount() {
        return transferAmount.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TRANSFER_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getTransferAmount_JsonNullable() {
    return transferAmount;
  }
  
  @JsonProperty(JSON_PROPERTY_TRANSFER_AMOUNT)
  public void setTransferAmount_JsonNullable(JsonNullable<Double> transferAmount) {
    this.transferAmount = transferAmount;
  }

  public void setTransferAmount(Double transferAmount) {
    this.transferAmount = JsonNullable.<Double>of(transferAmount);
  }


  public PaymentData comissions(Map<String, Double> comissions) {
    this.comissions = JsonNullable.<Map<String, Double>>of(comissions);
    
    return this;
  }

  public PaymentData putComissionsItem(String key, Double comissionsItem) {
    if (this.comissions == null || !this.comissions.isPresent()) {
      this.comissions = JsonNullable.<Map<String, Double>>of(new HashMap<>());
    }
    try {
      this.comissions.get().put(key, comissionsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Комиссии по платежу
   * @return comissions
  **/
  @jakarta.annotation.Nullable

  @JsonIgnore

  public Map<String, Double> getComissions() {
        return comissions.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_COMISSIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Map<String, Double>> getComissions_JsonNullable() {
    return comissions;
  }
  
  @JsonProperty(JSON_PROPERTY_COMISSIONS)
  public void setComissions_JsonNullable(JsonNullable<Map<String, Double>> comissions) {
    this.comissions = comissions;
  }

  public void setComissions(Map<String, Double> comissions) {
    this.comissions = JsonNullable.<Map<String, Double>>of(comissions);
  }


  public PaymentData clientFIO(String clientFIO) {
    this.clientFIO = JsonNullable.<String>of(clientFIO);
    
    return this;
  }

   /**
   * ФИО покупателя
   * @return clientFIO
  **/
  @jakarta.annotation.Nullable

  @JsonIgnore

  public String getClientFIO() {
        return clientFIO.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CLIENT_F_I_O)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getClientFIO_JsonNullable() {
    return clientFIO;
  }
  
  @JsonProperty(JSON_PROPERTY_CLIENT_F_I_O)
  public void setClientFIO_JsonNullable(JsonNullable<String> clientFIO) {
    this.clientFIO = clientFIO;
  }

  public void setClientFIO(String clientFIO) {
    this.clientFIO = JsonNullable.<String>of(clientFIO);
  }


  public PaymentData clientAddress(String clientAddress) {
    this.clientAddress = JsonNullable.<String>of(clientAddress);
    
    return this;
  }

   /**
   * Адрес клиента
   * @return clientAddress
  **/
  @jakarta.annotation.Nullable

  @JsonIgnore

  public String getClientAddress() {
        return clientAddress.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CLIENT_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getClientAddress_JsonNullable() {
    return clientAddress;
  }
  
  @JsonProperty(JSON_PROPERTY_CLIENT_ADDRESS)
  public void setClientAddress_JsonNullable(JsonNullable<String> clientAddress) {
    this.clientAddress = clientAddress;
  }

  public void setClientAddress(String clientAddress) {
    this.clientAddress = JsonNullable.<String>of(clientAddress);
  }


  public PaymentData clientEmail(String clientEmail) {
    this.clientEmail = JsonNullable.<String>of(clientEmail);
    
    return this;
  }

   /**
   * Электронный адрес клиента
   * @return clientEmail
  **/
  @jakarta.annotation.Nullable

  @JsonIgnore

  public String getClientEmail() {
        return clientEmail.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CLIENT_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getClientEmail_JsonNullable() {
    return clientEmail;
  }
  
  @JsonProperty(JSON_PROPERTY_CLIENT_EMAIL)
  public void setClientEmail_JsonNullable(JsonNullable<String> clientEmail) {
    this.clientEmail = clientEmail;
  }

  public void setClientEmail(String clientEmail) {
    this.clientEmail = JsonNullable.<String>of(clientEmail);
  }


  public PaymentData clientPhone(String clientPhone) {
    this.clientPhone = JsonNullable.<String>of(clientPhone);
    
    return this;
  }

   /**
   * Телефон клиента
   * @return clientPhone
  **/
  @jakarta.annotation.Nullable

  @JsonIgnore

  public String getClientPhone() {
        return clientPhone.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CLIENT_PHONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getClientPhone_JsonNullable() {
    return clientPhone;
  }
  
  @JsonProperty(JSON_PROPERTY_CLIENT_PHONE)
  public void setClientPhone_JsonNullable(JsonNullable<String> clientPhone) {
    this.clientPhone = clientPhone;
  }

  public void setClientPhone(String clientPhone) {
    this.clientPhone = JsonNullable.<String>of(clientPhone);
  }


   /**
   * Общая сумма комиссий
   * @return comissionsAmount
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_COMISSIONS_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getComissionsAmount() {
    return comissionsAmount;
  }




  public PaymentData penalty(Double penalty) {
    
    this.penalty = penalty;
    return this;
  }

   /**
   * Начисленная пеня по платежу
   * @return penalty
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_PENALTY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getPenalty() {
    return penalty;
  }


  @JsonProperty(JSON_PROPERTY_PENALTY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPenalty(Double penalty) {
    this.penalty = penalty;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaymentData paymentData = (PaymentData) o;
    return Objects.equals(this.payDate, paymentData.payDate) &&
        Objects.equals(this.verifyDate, paymentData.verifyDate) &&
        equalsNullable(this.memOrderNum, paymentData.memOrderNum) &&
        Objects.equals(this.memOrderDate, paymentData.memOrderDate) &&
        equalsNullable(this.bankCode, paymentData.bankCode) &&
        Objects.equals(this.tranEripId, paymentData.tranEripId) &&
        equalsNullable(this.authType, paymentData.authType) &&
        Objects.equals(this.currency, paymentData.currency) &&
        Objects.equals(this.payAmount, paymentData.payAmount) &&
        Objects.equals(this.currencyPayAmount, paymentData.currencyPayAmount) &&
        Objects.equals(this.currencyRate, paymentData.currencyRate) &&
        equalsNullable(this.transferAmount, paymentData.transferAmount) &&
        equalsNullable(this.comissions, paymentData.comissions) &&
        equalsNullable(this.clientFIO, paymentData.clientFIO) &&
        equalsNullable(this.clientAddress, paymentData.clientAddress) &&
        equalsNullable(this.clientEmail, paymentData.clientEmail) &&
        equalsNullable(this.clientPhone, paymentData.clientPhone) &&
        Objects.equals(this.comissionsAmount, paymentData.comissionsAmount) &&
        Objects.equals(this.penalty, paymentData.penalty);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(payDate, verifyDate, hashCodeNullable(memOrderNum), memOrderDate, hashCodeNullable(bankCode), tranEripId, hashCodeNullable(authType), currency, payAmount, currencyPayAmount, currencyRate, hashCodeNullable(transferAmount), hashCodeNullable(comissions), hashCodeNullable(clientFIO), hashCodeNullable(clientAddress), hashCodeNullable(clientEmail), hashCodeNullable(clientPhone), comissionsAmount, penalty);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaymentData {\n");
    sb.append("    payDate: ").append(toIndentedString(payDate)).append("\n");
    sb.append("    verifyDate: ").append(toIndentedString(verifyDate)).append("\n");
    sb.append("    memOrderNum: ").append(toIndentedString(memOrderNum)).append("\n");
    sb.append("    memOrderDate: ").append(toIndentedString(memOrderDate)).append("\n");
    sb.append("    bankCode: ").append(toIndentedString(bankCode)).append("\n");
    sb.append("    tranEripId: ").append(toIndentedString(tranEripId)).append("\n");
    sb.append("    authType: ").append(toIndentedString(authType)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    payAmount: ").append(toIndentedString(payAmount)).append("\n");
    sb.append("    currencyPayAmount: ").append(toIndentedString(currencyPayAmount)).append("\n");
    sb.append("    currencyRate: ").append(toIndentedString(currencyRate)).append("\n");
    sb.append("    transferAmount: ").append(toIndentedString(transferAmount)).append("\n");
    sb.append("    comissions: ").append(toIndentedString(comissions)).append("\n");
    sb.append("    clientFIO: ").append(toIndentedString(clientFIO)).append("\n");
    sb.append("    clientAddress: ").append(toIndentedString(clientAddress)).append("\n");
    sb.append("    clientEmail: ").append(toIndentedString(clientEmail)).append("\n");
    sb.append("    clientPhone: ").append(toIndentedString(clientPhone)).append("\n");
    sb.append("    comissionsAmount: ").append(toIndentedString(comissionsAmount)).append("\n");
    sb.append("    penalty: ").append(toIndentedString(penalty)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

