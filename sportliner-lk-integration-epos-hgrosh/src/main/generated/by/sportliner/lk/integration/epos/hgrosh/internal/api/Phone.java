/*
 * EPOS public API
 * **Public API сервиса E-POS**  For mode details refer to: * [ Website ](https://www.e-pos.by) * [API Docs](https://api-epos.hgrosh.by/public/swagger/index.html)
 *
 * The version of the OpenAPI document: v1
 * Contact: support-api@epos.by
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package by.sportliner.lk.integration.epos.hgrosh.internal.api;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;

/**
 * Номер телефона.
 */
@JsonPropertyOrder({
  Phone.JSON_PROPERTY_TYPE,
  Phone.JSON_PROPERTY_COUNTRY_CODE,
  Phone.JSON_PROPERTY_NATIONAL_NUMBER,
  Phone.JSON_PROPERTY_IS_MAIN,
  Phone.JSON_PROPERTY_FULL_NUMBER
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class Phone {
  public static final String JSON_PROPERTY_TYPE = "type";
  private JsonNullable<String> type = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_COUNTRY_CODE = "countryCode";
  private JsonNullable<String> countryCode = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NATIONAL_NUMBER = "nationalNumber";
  private JsonNullable<String> nationalNumber = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IS_MAIN = "isMain";
  private Boolean isMain;

  public static final String JSON_PROPERTY_FULL_NUMBER = "fullNumber";
  private JsonNullable<String> fullNumber = JsonNullable.<String>undefined();

  public Phone() {
  }

  @JsonCreator
  public Phone(
    @JsonProperty(JSON_PROPERTY_FULL_NUMBER) String fullNumber
  ) {
    this();
    this.fullNumber = fullNumber == null ? JsonNullable.<String>undefined() : JsonNullable.of(fullNumber);
  }

  public Phone type(String type) {
    this.type = JsonNullable.<String>of(type);
    
    return this;
  }

   /**
   * Тип телефонного номера (рабочий, мобильный, факс).
   * @return type
  **/
  @jakarta.annotation.Nullable

  @JsonIgnore

  public String getType() {
        return type.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getType_JsonNullable() {
    return type;
  }
  
  @JsonProperty(JSON_PROPERTY_TYPE)
  public void setType_JsonNullable(JsonNullable<String> type) {
    this.type = type;
  }

  public void setType(String type) {
    this.type = JsonNullable.<String>of(type);
  }


  public Phone countryCode(String countryCode) {
    this.countryCode = JsonNullable.<String>of(countryCode);
    
    return this;
  }

   /**
   * Код страны (Шаблон: ^[0-9]{1,3}?$).
   * @return countryCode
  **/
  @jakarta.annotation.Nullable

  @JsonIgnore

  public String getCountryCode() {
        return countryCode.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_COUNTRY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCountryCode_JsonNullable() {
    return countryCode;
  }
  
  @JsonProperty(JSON_PROPERTY_COUNTRY_CODE)
  public void setCountryCode_JsonNullable(JsonNullable<String> countryCode) {
    this.countryCode = countryCode;
  }

  public void setCountryCode(String countryCode) {
    this.countryCode = JsonNullable.<String>of(countryCode);
  }


  public Phone nationalNumber(String nationalNumber) {
    this.nationalNumber = JsonNullable.<String>of(nationalNumber);
    
    return this;
  }

   /**
   * Национальный номер (Шаблон: ^[0-9]{1,14}?$).
   * @return nationalNumber
  **/
  @jakarta.annotation.Nullable

  @JsonIgnore

  public String getNationalNumber() {
        return nationalNumber.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NATIONAL_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNationalNumber_JsonNullable() {
    return nationalNumber;
  }
  
  @JsonProperty(JSON_PROPERTY_NATIONAL_NUMBER)
  public void setNationalNumber_JsonNullable(JsonNullable<String> nationalNumber) {
    this.nationalNumber = nationalNumber;
  }

  public void setNationalNumber(String nationalNumber) {
    this.nationalNumber = JsonNullable.<String>of(nationalNumber);
  }


  public Phone isMain(Boolean isMain) {
    
    this.isMain = isMain;
    return this;
  }

   /**
   * Основной номер телефона.
   * @return isMain
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_IS_MAIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean isIsMain() {
    return isMain;
  }


  @JsonProperty(JSON_PROPERTY_IS_MAIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsMain(Boolean isMain) {
    this.isMain = isMain;
  }


   /**
   * Полный номер телефона
   * @return fullNumber
  **/
  @jakarta.annotation.Nullable

  @JsonIgnore

  public String getFullNumber() {
    
    if (fullNumber == null) {
      fullNumber = JsonNullable.<String>undefined();
    }
    return fullNumber.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FULL_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getFullNumber_JsonNullable() {
    return fullNumber;
  }
  
  @JsonProperty(JSON_PROPERTY_FULL_NUMBER)
  private void setFullNumber_JsonNullable(JsonNullable<String> fullNumber) {
    this.fullNumber = fullNumber;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Phone phone = (Phone) o;
    return equalsNullable(this.type, phone.type) &&
        equalsNullable(this.countryCode, phone.countryCode) &&
        equalsNullable(this.nationalNumber, phone.nationalNumber) &&
        Objects.equals(this.isMain, phone.isMain) &&
        equalsNullable(this.fullNumber, phone.fullNumber);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(type), hashCodeNullable(countryCode), hashCodeNullable(nationalNumber), isMain, hashCodeNullable(fullNumber));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Phone {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    countryCode: ").append(toIndentedString(countryCode)).append("\n");
    sb.append("    nationalNumber: ").append(toIndentedString(nationalNumber)).append("\n");
    sb.append("    isMain: ").append(toIndentedString(isMain)).append("\n");
    sb.append("    fullNumber: ").append(toIndentedString(fullNumber)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

