/*
 * EPOS public API
 * **Public API сервиса E-POS**  For mode details refer to: * [ Website ](https://www.e-pos.by) * [API Docs](https://api-epos.hgrosh.by/public/swagger/index.html)
 *
 * The version of the OpenAPI document: v1
 * Contact: support-api@epos.by
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package by.sportliner.lk.integration.epos.hgrosh.internal.api;

import java.util.Objects;
import java.util.Arrays;
import by.sportliner.lk.integration.epos.hgrosh.internal.api.PeriodicityTypeEnum;
import by.sportliner.lk.integration.epos.hgrosh.internal.api.ReportAttachFileType;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;

/**
 * Структура отчета
 */
@JsonPropertyOrder({
  Report.JSON_PROPERTY_CODE,
  Report.JSON_PROPERTY_NAME,
  Report.JSON_PROPERTY_PERIODICITY,
  Report.JSON_PROPERTY_DESCR,
  Report.JSON_PROPERTY_DEFAULT_TEMPLATE_NAME,
  Report.JSON_PROPERTY_DEFAULT_FILE_NAME,
  Report.JSON_PROPERTY_ATTACH_TYPES,
  Report.JSON_PROPERTY_IS_ACTIVE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class Report {
  public static final String JSON_PROPERTY_CODE = "code";
  private Integer code;

  public static final String JSON_PROPERTY_NAME = "name";
  private JsonNullable<String> name = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PERIODICITY = "periodicity";
  private PeriodicityTypeEnum periodicity;

  public static final String JSON_PROPERTY_DESCR = "descr";
  private JsonNullable<String> descr = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DEFAULT_TEMPLATE_NAME = "defaultTemplateName";
  private JsonNullable<String> defaultTemplateName = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DEFAULT_FILE_NAME = "defaultFileName";
  private JsonNullable<String> defaultFileName = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ATTACH_TYPES = "attachTypes";
  private JsonNullable<List<ReportAttachFileType>> attachTypes = JsonNullable.<List<ReportAttachFileType>>undefined();

  public static final String JSON_PROPERTY_IS_ACTIVE = "isActive";
  private Boolean isActive;

  public Report() {
  }

  public Report code(Integer code) {
    
    this.code = code;
    return this;
  }

   /**
   * Идентификатор отчета
   * @return code
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getCode() {
    return code;
  }


  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCode(Integer code) {
    this.code = code;
  }


  public Report name(String name) {
    this.name = JsonNullable.<String>of(name);
    
    return this;
  }

   /**
   * Наименование отчета
   * @return name
  **/
  @jakarta.annotation.Nullable

  @JsonIgnore

  public String getName() {
        return name.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getName_JsonNullable() {
    return name;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME)
  public void setName_JsonNullable(JsonNullable<String> name) {
    this.name = name;
  }

  public void setName(String name) {
    this.name = JsonNullable.<String>of(name);
  }


  public Report periodicity(PeriodicityTypeEnum periodicity) {
    
    this.periodicity = periodicity;
    return this;
  }

   /**
   * Get periodicity
   * @return periodicity
  **/
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_PERIODICITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PeriodicityTypeEnum getPeriodicity() {
    return periodicity;
  }


  @JsonProperty(JSON_PROPERTY_PERIODICITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPeriodicity(PeriodicityTypeEnum periodicity) {
    this.periodicity = periodicity;
  }


  public Report descr(String descr) {
    this.descr = JsonNullable.<String>of(descr);
    
    return this;
  }

   /**
   * Описание отчета
   * @return descr
  **/
  @jakarta.annotation.Nullable

  @JsonIgnore

  public String getDescr() {
        return descr.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DESCR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDescr_JsonNullable() {
    return descr;
  }
  
  @JsonProperty(JSON_PROPERTY_DESCR)
  public void setDescr_JsonNullable(JsonNullable<String> descr) {
    this.descr = descr;
  }

  public void setDescr(String descr) {
    this.descr = JsonNullable.<String>of(descr);
  }


  public Report defaultTemplateName(String defaultTemplateName) {
    this.defaultTemplateName = JsonNullable.<String>of(defaultTemplateName);
    
    return this;
  }

   /**
   * Имя шаблона по умолчанию
   * @return defaultTemplateName
  **/
  @jakarta.annotation.Nullable

  @JsonIgnore

  public String getDefaultTemplateName() {
        return defaultTemplateName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DEFAULT_TEMPLATE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDefaultTemplateName_JsonNullable() {
    return defaultTemplateName;
  }
  
  @JsonProperty(JSON_PROPERTY_DEFAULT_TEMPLATE_NAME)
  public void setDefaultTemplateName_JsonNullable(JsonNullable<String> defaultTemplateName) {
    this.defaultTemplateName = defaultTemplateName;
  }

  public void setDefaultTemplateName(String defaultTemplateName) {
    this.defaultTemplateName = JsonNullable.<String>of(defaultTemplateName);
  }


  public Report defaultFileName(String defaultFileName) {
    this.defaultFileName = JsonNullable.<String>of(defaultFileName);
    
    return this;
  }

   /**
   * Имя файла по умолчанию
   * @return defaultFileName
  **/
  @jakarta.annotation.Nullable

  @JsonIgnore

  public String getDefaultFileName() {
        return defaultFileName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DEFAULT_FILE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDefaultFileName_JsonNullable() {
    return defaultFileName;
  }
  
  @JsonProperty(JSON_PROPERTY_DEFAULT_FILE_NAME)
  public void setDefaultFileName_JsonNullable(JsonNullable<String> defaultFileName) {
    this.defaultFileName = defaultFileName;
  }

  public void setDefaultFileName(String defaultFileName) {
    this.defaultFileName = JsonNullable.<String>of(defaultFileName);
  }


  public Report attachTypes(List<ReportAttachFileType> attachTypes) {
    this.attachTypes = JsonNullable.<List<ReportAttachFileType>>of(attachTypes);
    
    return this;
  }

  public Report addAttachTypesItem(ReportAttachFileType attachTypesItem) {
    if (this.attachTypes == null || !this.attachTypes.isPresent()) {
      this.attachTypes = JsonNullable.<List<ReportAttachFileType>>of(new ArrayList<>());
    }
    try {
      this.attachTypes.get().add(attachTypesItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Типы возможных вложений для отчета
   * @return attachTypes
  **/
  @jakarta.annotation.Nullable
  @Valid

  @JsonIgnore

  public List<ReportAttachFileType> getAttachTypes() {
        return attachTypes.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ATTACH_TYPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<ReportAttachFileType>> getAttachTypes_JsonNullable() {
    return attachTypes;
  }
  
  @JsonProperty(JSON_PROPERTY_ATTACH_TYPES)
  public void setAttachTypes_JsonNullable(JsonNullable<List<ReportAttachFileType>> attachTypes) {
    this.attachTypes = attachTypes;
  }

  public void setAttachTypes(List<ReportAttachFileType> attachTypes) {
    this.attachTypes = JsonNullable.<List<ReportAttachFileType>>of(attachTypes);
  }


  public Report isActive(Boolean isActive) {
    
    this.isActive = isActive;
    return this;
  }

   /**
   * Признак активности отчета
   * @return isActive
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_IS_ACTIVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean isIsActive() {
    return isActive;
  }


  @JsonProperty(JSON_PROPERTY_IS_ACTIVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsActive(Boolean isActive) {
    this.isActive = isActive;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Report report = (Report) o;
    return Objects.equals(this.code, report.code) &&
        equalsNullable(this.name, report.name) &&
        Objects.equals(this.periodicity, report.periodicity) &&
        equalsNullable(this.descr, report.descr) &&
        equalsNullable(this.defaultTemplateName, report.defaultTemplateName) &&
        equalsNullable(this.defaultFileName, report.defaultFileName) &&
        equalsNullable(this.attachTypes, report.attachTypes) &&
        Objects.equals(this.isActive, report.isActive);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(code, hashCodeNullable(name), periodicity, hashCodeNullable(descr), hashCodeNullable(defaultTemplateName), hashCodeNullable(defaultFileName), hashCodeNullable(attachTypes), isActive);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Report {\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    periodicity: ").append(toIndentedString(periodicity)).append("\n");
    sb.append("    descr: ").append(toIndentedString(descr)).append("\n");
    sb.append("    defaultTemplateName: ").append(toIndentedString(defaultTemplateName)).append("\n");
    sb.append("    defaultFileName: ").append(toIndentedString(defaultFileName)).append("\n");
    sb.append("    attachTypes: ").append(toIndentedString(attachTypes)).append("\n");
    sb.append("    isActive: ").append(toIndentedString(isActive)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

