/*
 * EPOS public API
 * **Public API сервиса E-POS**  For mode details refer to: * [ Website ](https://www.e-pos.by) * [API Docs](https://api-epos.hgrosh.by/public/swagger/index.html)
 *
 * The version of the OpenAPI document: v1
 * Contact: support-api@epos.by
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package by.sportliner.lk.integration.epos.hgrosh.internal.api;

import java.util.Objects;
import java.util.Arrays;
import by.sportliner.lk.integration.epos.hgrosh.internal.api.Invoice;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;

/**
 * Класс запроса на получение ссылки оплаты через WebPay
 */
@JsonPropertyOrder({
  WebPayParam.JSON_PROPERTY_INVOICE,
  WebPayParam.JSON_PROPERTY_AMOUNT,
  WebPayParam.JSON_PROPERTY_SUCCESS_RETURN_URL,
  WebPayParam.JSON_PROPERTY_CANCEL_RETURN_URL,
  WebPayParam.JSON_PROPERTY_NOTIFY_URL,
  WebPayParam.JSON_PROPERTY_SUBMIT_VALUE,
  WebPayParam.JSON_PROPERTY_IS_TEST_MODE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class WebPayParam {
  public static final String JSON_PROPERTY_INVOICE = "invoice";
  private Invoice invoice;

  public static final String JSON_PROPERTY_AMOUNT = "amount";
  private JsonNullable<Double> amount = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_SUCCESS_RETURN_URL = "successReturnUrl";
  private JsonNullable<String> successReturnUrl = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CANCEL_RETURN_URL = "cancelReturnUrl";
  private JsonNullable<String> cancelReturnUrl = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NOTIFY_URL = "notifyUrl";
  private JsonNullable<String> notifyUrl = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SUBMIT_VALUE = "submitValue";
  private JsonNullable<String> submitValue = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IS_TEST_MODE = "isTestMode";
  private JsonNullable<Boolean> isTestMode = JsonNullable.<Boolean>undefined();

  public WebPayParam() {
  }

  public WebPayParam invoice(Invoice invoice) {
    
    this.invoice = invoice;
    return this;
  }

   /**
   * Get invoice
   * @return invoice
  **/
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_INVOICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Invoice getInvoice() {
    return invoice;
  }


  @JsonProperty(JSON_PROPERTY_INVOICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInvoice(Invoice invoice) {
    this.invoice = invoice;
  }


  public WebPayParam amount(Double amount) {
    this.amount = JsonNullable.<Double>of(amount);
    
    return this;
  }

   /**
   * Сумма к оплате по инвойсу
   * @return amount
  **/
  @jakarta.annotation.Nullable

  @JsonIgnore

  public Double getAmount() {
        return amount.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getAmount_JsonNullable() {
    return amount;
  }
  
  @JsonProperty(JSON_PROPERTY_AMOUNT)
  public void setAmount_JsonNullable(JsonNullable<Double> amount) {
    this.amount = amount;
  }

  public void setAmount(Double amount) {
    this.amount = JsonNullable.<Double>of(amount);
  }


  public WebPayParam successReturnUrl(String successReturnUrl) {
    this.successReturnUrl = JsonNullable.<String>of(successReturnUrl);
    
    return this;
  }

   /**
   * Адрес, на который переходит клиент в случае успешной оплаты
   * @return successReturnUrl
  **/
  @jakarta.annotation.Nullable

  @JsonIgnore

  public String getSuccessReturnUrl() {
        return successReturnUrl.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SUCCESS_RETURN_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSuccessReturnUrl_JsonNullable() {
    return successReturnUrl;
  }
  
  @JsonProperty(JSON_PROPERTY_SUCCESS_RETURN_URL)
  public void setSuccessReturnUrl_JsonNullable(JsonNullable<String> successReturnUrl) {
    this.successReturnUrl = successReturnUrl;
  }

  public void setSuccessReturnUrl(String successReturnUrl) {
    this.successReturnUrl = JsonNullable.<String>of(successReturnUrl);
  }


  public WebPayParam cancelReturnUrl(String cancelReturnUrl) {
    this.cancelReturnUrl = JsonNullable.<String>of(cancelReturnUrl);
    
    return this;
  }

   /**
   * Адрес, на который переходит клиент в случае неуспешной оплаты
   * @return cancelReturnUrl
  **/
  @jakarta.annotation.Nullable

  @JsonIgnore

  public String getCancelReturnUrl() {
        return cancelReturnUrl.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CANCEL_RETURN_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCancelReturnUrl_JsonNullable() {
    return cancelReturnUrl;
  }
  
  @JsonProperty(JSON_PROPERTY_CANCEL_RETURN_URL)
  public void setCancelReturnUrl_JsonNullable(JsonNullable<String> cancelReturnUrl) {
    this.cancelReturnUrl = cancelReturnUrl;
  }

  public void setCancelReturnUrl(String cancelReturnUrl) {
    this.cancelReturnUrl = JsonNullable.<String>of(cancelReturnUrl);
  }


  public WebPayParam notifyUrl(String notifyUrl) {
    this.notifyUrl = JsonNullable.<String>of(notifyUrl);
    
    return this;
  }

   /**
   * Адрес для нотификации в случае отсутствия адресов перехода успешной и неуспешной оплаты
   * @return notifyUrl
  **/
  @jakarta.annotation.Nullable

  @JsonIgnore

  public String getNotifyUrl() {
        return notifyUrl.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NOTIFY_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNotifyUrl_JsonNullable() {
    return notifyUrl;
  }
  
  @JsonProperty(JSON_PROPERTY_NOTIFY_URL)
  public void setNotifyUrl_JsonNullable(JsonNullable<String> notifyUrl) {
    this.notifyUrl = notifyUrl;
  }

  public void setNotifyUrl(String notifyUrl) {
    this.notifyUrl = JsonNullable.<String>of(notifyUrl);
  }


  public WebPayParam submitValue(String submitValue) {
    this.submitValue = JsonNullable.<String>of(submitValue);
    
    return this;
  }

   /**
   * Надпись на кнопке для оплаты
   * @return submitValue
  **/
  @jakarta.annotation.Nullable

  @JsonIgnore

  public String getSubmitValue() {
        return submitValue.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SUBMIT_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSubmitValue_JsonNullable() {
    return submitValue;
  }
  
  @JsonProperty(JSON_PROPERTY_SUBMIT_VALUE)
  public void setSubmitValue_JsonNullable(JsonNullable<String> submitValue) {
    this.submitValue = submitValue;
  }

  public void setSubmitValue(String submitValue) {
    this.submitValue = JsonNullable.<String>of(submitValue);
  }


  public WebPayParam isTestMode(Boolean isTestMode) {
    this.isTestMode = JsonNullable.<Boolean>of(isTestMode);
    
    return this;
  }

   /**
   * Режим оплаты: false или null - реальная оплата, true - тестовая оплата
   * @return isTestMode
  **/
  @jakarta.annotation.Nullable

  @JsonIgnore

  public Boolean isIsTestMode() {
        return isTestMode.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IS_TEST_MODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> isIsTestMode_JsonNullable() {
    return isTestMode;
  }
  
  @JsonProperty(JSON_PROPERTY_IS_TEST_MODE)
  public void setIsTestMode_JsonNullable(JsonNullable<Boolean> isTestMode) {
    this.isTestMode = isTestMode;
  }

  public void setIsTestMode(Boolean isTestMode) {
    this.isTestMode = JsonNullable.<Boolean>of(isTestMode);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WebPayParam webPayParam = (WebPayParam) o;
    return Objects.equals(this.invoice, webPayParam.invoice) &&
        equalsNullable(this.amount, webPayParam.amount) &&
        equalsNullable(this.successReturnUrl, webPayParam.successReturnUrl) &&
        equalsNullable(this.cancelReturnUrl, webPayParam.cancelReturnUrl) &&
        equalsNullable(this.notifyUrl, webPayParam.notifyUrl) &&
        equalsNullable(this.submitValue, webPayParam.submitValue) &&
        equalsNullable(this.isTestMode, webPayParam.isTestMode);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(invoice, hashCodeNullable(amount), hashCodeNullable(successReturnUrl), hashCodeNullable(cancelReturnUrl), hashCodeNullable(notifyUrl), hashCodeNullable(submitValue), hashCodeNullable(isTestMode));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WebPayParam {\n");
    sb.append("    invoice: ").append(toIndentedString(invoice)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    successReturnUrl: ").append(toIndentedString(successReturnUrl)).append("\n");
    sb.append("    cancelReturnUrl: ").append(toIndentedString(cancelReturnUrl)).append("\n");
    sb.append("    notifyUrl: ").append(toIndentedString(notifyUrl)).append("\n");
    sb.append("    submitValue: ").append(toIndentedString(submitValue)).append("\n");
    sb.append("    isTestMode: ").append(toIndentedString(isTestMode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

