/*
 * EPOS public API
 * **Public API сервиса E-POS**  For mode details refer to: * [ Website ](https://www.e-pos.by) * [API Docs](https://api-epos.hgrosh.by/public/swagger/index.html)
 *
 * The version of the OpenAPI document: v1
 * Contact: support-api@epos.by
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package by.sportliner.lk.integration.epos.hgrosh.internal.api;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;

/**
 * Класс сформированного qr-кода для инвойса
 */
@JsonPropertyOrder({
  InvoiceQRCode.JSON_PROPERTY_NUM,
  InvoiceQRCode.JSON_PROPERTY_ADDRESS,
  InvoiceQRCode.JSON_PROPERTY_TINY_LINK,
  InvoiceQRCode.JSON_PROPERTY_QR_DATA,
  InvoiceQRCode.JSON_PROPERTY_QR_DATA_ENCODED,
  InvoiceQRCode.JSON_PROPERTY_IMAGE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class InvoiceQRCode {
  public static final String JSON_PROPERTY_NUM = "num";
  private JsonNullable<String> num = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ADDRESS = "address";
  private JsonNullable<String> address = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_TINY_LINK = "tinyLink";
  private JsonNullable<String> tinyLink = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_QR_DATA = "qrData";
  private JsonNullable<String> qrData = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_QR_DATA_ENCODED = "qrDataEncoded";
  private JsonNullable<String> qrDataEncoded = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IMAGE = "image";
  private JsonNullable<byte[]> image = JsonNullable.<byte[]>undefined();

  public InvoiceQRCode() {
  }

  @JsonCreator
  public InvoiceQRCode(
    @JsonProperty(JSON_PROPERTY_QR_DATA_ENCODED) String qrDataEncoded
  ) {
    this();
    this.qrDataEncoded = qrDataEncoded == null ? JsonNullable.<String>undefined() : JsonNullable.of(qrDataEncoded);
  }

  public InvoiceQRCode num(String num) {
    this.num = JsonNullable.<String>of(num);
    
    return this;
  }

   /**
   * Полный номер счета
   * @return num
  **/
  @jakarta.annotation.Nullable

  @JsonIgnore

  public String getNum() {
        return num.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NUM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNum_JsonNullable() {
    return num;
  }
  
  @JsonProperty(JSON_PROPERTY_NUM)
  public void setNum_JsonNullable(JsonNullable<String> num) {
    this.num = num;
  }

  public void setNum(String num) {
    this.num = JsonNullable.<String>of(num);
  }


  public InvoiceQRCode address(String address) {
    this.address = JsonNullable.<String>of(address);
    
    return this;
  }

   /**
   * Адрес сервера для обработки qr-кода
   * @return address
  **/
  @jakarta.annotation.Nullable

  @JsonIgnore

  public String getAddress() {
        return address.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getAddress_JsonNullable() {
    return address;
  }
  
  @JsonProperty(JSON_PROPERTY_ADDRESS)
  public void setAddress_JsonNullable(JsonNullable<String> address) {
    this.address = address;
  }

  public void setAddress(String address) {
    this.address = JsonNullable.<String>of(address);
  }


  public InvoiceQRCode tinyLink(String tinyLink) {
    this.tinyLink = JsonNullable.<String>of(tinyLink);
    
    return this;
  }

   /**
   * Короткая ссылка
   * @return tinyLink
  **/
  @jakarta.annotation.Nullable

  @JsonIgnore

  public String getTinyLink() {
        return tinyLink.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TINY_LINK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getTinyLink_JsonNullable() {
    return tinyLink;
  }
  
  @JsonProperty(JSON_PROPERTY_TINY_LINK)
  public void setTinyLink_JsonNullable(JsonNullable<String> tinyLink) {
    this.tinyLink = tinyLink;
  }

  public void setTinyLink(String tinyLink) {
    this.tinyLink = JsonNullable.<String>of(tinyLink);
  }


  public InvoiceQRCode qrData(String qrData) {
    this.qrData = JsonNullable.<String>of(qrData);
    
    return this;
  }

   /**
   * Массив с данными для формирования qr-кода
   * @return qrData
  **/
  @jakarta.annotation.Nullable

  @JsonIgnore

  public String getQrData() {
        return qrData.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_QR_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getQrData_JsonNullable() {
    return qrData;
  }
  
  @JsonProperty(JSON_PROPERTY_QR_DATA)
  public void setQrData_JsonNullable(JsonNullable<String> qrData) {
    this.qrData = qrData;
  }

  public void setQrData(String qrData) {
    this.qrData = JsonNullable.<String>of(qrData);
  }


   /**
   * Енкодированная строка с данными
   * @return qrDataEncoded
  **/
  @jakarta.annotation.Nullable

  @JsonIgnore

  public String getQrDataEncoded() {
    
    if (qrDataEncoded == null) {
      qrDataEncoded = JsonNullable.<String>undefined();
    }
    return qrDataEncoded.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_QR_DATA_ENCODED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getQrDataEncoded_JsonNullable() {
    return qrDataEncoded;
  }
  
  @JsonProperty(JSON_PROPERTY_QR_DATA_ENCODED)
  private void setQrDataEncoded_JsonNullable(JsonNullable<String> qrDataEncoded) {
    this.qrDataEncoded = qrDataEncoded;
  }



  public InvoiceQRCode image(byte[] image) {
    this.image = JsonNullable.<byte[]>of(image);
    
    return this;
  }

   /**
   * Изображение в виде массива байт (в случае, если getImage &#x3D; true )
   * @return image
  **/
  @jakarta.annotation.Nullable

  @JsonIgnore

  public byte[] getImage() {
        return image.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IMAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<byte[]> getImage_JsonNullable() {
    return image;
  }
  
  @JsonProperty(JSON_PROPERTY_IMAGE)
  public void setImage_JsonNullable(JsonNullable<byte[]> image) {
    this.image = image;
  }

  public void setImage(byte[] image) {
    this.image = JsonNullable.<byte[]>of(image);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InvoiceQRCode invoiceQRCode = (InvoiceQRCode) o;
    return equalsNullable(this.num, invoiceQRCode.num) &&
        equalsNullable(this.address, invoiceQRCode.address) &&
        equalsNullable(this.tinyLink, invoiceQRCode.tinyLink) &&
        equalsNullable(this.qrData, invoiceQRCode.qrData) &&
        equalsNullable(this.qrDataEncoded, invoiceQRCode.qrDataEncoded) &&
        equalsNullable(this.image, invoiceQRCode.image);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(num), hashCodeNullable(address), hashCodeNullable(tinyLink), hashCodeNullable(qrData), hashCodeNullable(qrDataEncoded), hashCodeNullable(image));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InvoiceQRCode {\n");
    sb.append("    num: ").append(toIndentedString(num)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    tinyLink: ").append(toIndentedString(tinyLink)).append("\n");
    sb.append("    qrData: ").append(toIndentedString(qrData)).append("\n");
    sb.append("    qrDataEncoded: ").append(toIndentedString(qrDataEncoded)).append("\n");
    sb.append("    image: ").append(toIndentedString(image)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

