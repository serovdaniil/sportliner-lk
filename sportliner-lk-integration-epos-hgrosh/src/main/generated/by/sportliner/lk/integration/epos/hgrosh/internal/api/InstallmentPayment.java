/*
 * EPOS public API
 * **Public API сервиса E-POS**  For mode details refer to: * [ Website ](https://www.e-pos.by) * [API Docs](https://api-epos.hgrosh.by/public/swagger/index.html)
 *
 * The version of the OpenAPI document: v1
 * Contact: support-api@epos.by
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package by.sportliner.lk.integration.epos.hgrosh.internal.api;

import java.util.Objects;
import java.util.Arrays;
import by.sportliner.lk.integration.epos.hgrosh.internal.api.PenaltyRule;
import by.sportliner.lk.integration.epos.hgrosh.internal.api.Stage;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;

/**
 * Оплата в рассрочку.
 */
@JsonPropertyOrder({
  InstallmentPayment.JSON_PROPERTY_STAGES,
  InstallmentPayment.JSON_PROPERTY_PENALTY
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class InstallmentPayment {
  public static final String JSON_PROPERTY_STAGES = "stages";
  private JsonNullable<List<Stage>> stages = JsonNullable.<List<Stage>>undefined();

  public static final String JSON_PROPERTY_PENALTY = "penalty";
  private PenaltyRule penalty;

  public InstallmentPayment() {
  }

  public InstallmentPayment stages(List<Stage> stages) {
    this.stages = JsonNullable.<List<Stage>>of(stages);
    
    return this;
  }

  public InstallmentPayment addStagesItem(Stage stagesItem) {
    if (this.stages == null || !this.stages.isPresent()) {
      this.stages = JsonNullable.<List<Stage>>of(new ArrayList<>());
    }
    try {
      this.stages.get().add(stagesItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Этапы рассрочки.
   * @return stages
  **/
  @jakarta.annotation.Nullable
  @Valid

  @JsonIgnore

  public List<Stage> getStages() {
        return stages.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STAGES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<Stage>> getStages_JsonNullable() {
    return stages;
  }
  
  @JsonProperty(JSON_PROPERTY_STAGES)
  public void setStages_JsonNullable(JsonNullable<List<Stage>> stages) {
    this.stages = stages;
  }

  public void setStages(List<Stage> stages) {
    this.stages = JsonNullable.<List<Stage>>of(stages);
  }


  public InstallmentPayment penalty(PenaltyRule penalty) {
    
    this.penalty = penalty;
    return this;
  }

   /**
   * Get penalty
   * @return penalty
  **/
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_PENALTY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PenaltyRule getPenalty() {
    return penalty;
  }


  @JsonProperty(JSON_PROPERTY_PENALTY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPenalty(PenaltyRule penalty) {
    this.penalty = penalty;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InstallmentPayment installmentPayment = (InstallmentPayment) o;
    return equalsNullable(this.stages, installmentPayment.stages) &&
        Objects.equals(this.penalty, installmentPayment.penalty);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(stages), penalty);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InstallmentPayment {\n");
    sb.append("    stages: ").append(toIndentedString(stages)).append("\n");
    sb.append("    penalty: ").append(toIndentedString(penalty)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

